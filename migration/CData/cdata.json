{
  "scan_info": {
    "root_directory": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core",
    "scan_timestamp": null,
    "files_scanned": 39,
    "files_imported": 38,
    "classes_found": 212,
    "import_errors": 1
  },
  "classes": {
    "CAsuContent": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAsuContent",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CAsuContent",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "seqList": {
          "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAsuContentSeqList'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Failed reading file - is it correct file type?"
        },
        "102": {
          "description": "Failed reading file - it is not AU contents file"
        }
      }
    },
    "CAsuContentSeq": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAsuContentSeq",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAsuContentSeq",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "sequence": {
          "class": "<class 'ccp4x.data_scan.CCP4ModelData.CSequenceString'>",
          "qualifiers": {
            "allowUndefined": false,
            "minLength": 1
          }
        },
        "nCopies": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "enumerators": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "default": 1,
            "min": 0
          }
        },
        "polymerType": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "PROTEIN",
              "RNA",
              "DNA"
            ],
            "default": "PROTEIN"
          }
        },
        "name": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefined": false,
            "minLength": 1,
            "allowedCharsCode": 1
          }
        },
        "description": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefined": true
          }
        },
        "source": {
          "class": "<class 'core.CCP4File.CDataFile'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAsuContentSeqList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAsuContentSeqList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CAsuContentSeqList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 0
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "401": {
          "description": "Sequence the same as a sequence that is already loaded"
        },
        "402": {
          "description": "Sequence names are not unique: "
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAsuContentSeq'>"
      }
    },
    "CAsuDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAsuDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A reference to an XML file with CCP4i2 Header",
      "base_classes": [
        "CI2XmlDataFile"
      ],
      "immediate_parent": "CI2XmlDataFile",
      "mro": [
        "CAsuDataFile",
        "CI2XmlDataFile",
        "CXmlDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        },
        "selection": {
          "class": "<class 'core.CCP4Data.CDict'>",
          "subItem": {
            "class": "<class 'core.CCP4Data.CBoolean'>"
          }
        }
      },
      "CONTENTS_ORDER": [
        "selection"
      ],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-asu-content",
        "mimeTypeDescription": "AU content",
        "fileExtensions": [
          "asu.xml"
        ],
        "fileContentClassName": "CAsuContent",
        "fileLabel": "AU contents",
        "guiLabel": "AU contents",
        "toolTip": "A CCP4i2 file specifying AU contents",
        "helpFile": "model_data#sequences",
        "saveToDb": true,
        "selectionMode": 0
      },
      "QUALIFIERS_ORDER": [
        "autoLoadHeader"
      ],
      "QUALIFIERS_DEFINITION": {
        "selectionMode": {
          "type": "<class 'int'>",
          "description": "Chain selection options"
        }
      },
      "ERROR_CODES": {
        "1003": {
          "description": "XML does not have <ccp4i2> root node"
        },
        "1004": {
          "severity": 2,
          "description": "XML does not have <ccp4i2_header> section"
        },
        "1005": {
          "description": "XML does not have <ccp4i2_body> section"
        }
      }
    },
    "CAtomRefmacSelection": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAtomRefmacSelection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A residue range selection for rigid body groups",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAtomRefmacSelection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "groupId": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "chainId": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "firstRes": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "lastRes": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [
        "groupId",
        "chainId",
        "firstRes",
        "lastRes"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAtomRefmacSelectionGroups": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAtomRefmacSelectionGroups",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A group selection for occupancy groups",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAtomRefmacSelectionGroups",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "groupIds": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "groupIds"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAtomRefmacSelectionList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAtomRefmacSelectionList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CAtomRefmacSelectionList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAtomRefmacSelection'>"
      }
    },
    "CAtomRefmacSelectionOccupancy": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAtomRefmacSelectionOccupancy",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A residue range selection for occupancy groups",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAtomRefmacSelectionOccupancy",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "groupId": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "chainIds": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "firstRes": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "lastRes": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "atoms": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "alt": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        }
      },
      "CONTENTS_ORDER": [
        "groupId",
        "chainIds",
        "firstRes",
        "lastRes",
        "atoms",
        "alt"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAtomSelection": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CAtomSelection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAtomSelection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "text": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "pdbFileKey": ""
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "pdbFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CPdbDataFile in the same CContainer"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CBlastData": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CBlastData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CBlastData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "queryId": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "alignmentList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4ModelData.CBlastItem'>"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Failed reading blast file"
        },
        "202": {
          "description": "Blast file contains results of more than one query - only the first is read",
          "severity": 2
        },
        "203": {
          "description": "Failed parsing Blast file"
        }
      }
    },
    "CBlastDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CBlastDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CBlastDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "Blast sequence search",
        "mimeTypeName": "application/Blast-alignments",
        "mimeTypeDescription": "Blast sequence search results",
        "guiLabel": "Blast results",
        "tooltip": "Output from Blast search",
        "fileExtensions": [
          "bla",
          "blast",
          "xml"
        ],
        "fileContentClassName": "CBlastData",
        "helpFile": "model_data#ali"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CBlastItem": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CBlastItem",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CBlastItem",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "hitId": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "querySequence": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "hitSequence": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CChemComp": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CChemComp",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Component of CDictDataFile contents",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CChemComp",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "id": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "three_letter_code": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "name": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "group": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "number_atoms_all": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "number_atoms_nh": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "desc_level": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Error reading monomer id and name"
        },
        "202": {
          "description": "Error writing monomer id and name"
        }
      }
    },
    "CDictData": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CDictData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CDictData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "monomerList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4ModelData.CChemComp'>"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error opening MMCIF format file"
        },
        "102": {
          "description": "Error merging data - monomer already in geometry file"
        },
        "103": {
          "severity": 2,
          "description": "Warning merging data - overwriting geometry for monomer with same id"
        },
        "104": {
          "description": "Error reading geometry cif file - does not contain expected data"
        },
        "105": {
          "description": "Unknown error reading geometry file"
        },
        "106": {
          "description": "_chem_comp section not found in geometry file"
        },
        "110": {
          "description": "Attemting to delete unrecognised chem_comp.id"
        }
      }
    },
    "CDictDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CDictDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A refmac dictionary file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CDictDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "dictionary",
        "mimeTypeName": "application/refmac-dictionary",
        "mimeTypeDescription": "Geometry file",
        "guiLabel": "Geometry dictionary",
        "toolTip": "Idealised geometry of ligands for refinement",
        "fileExtensions": [
          "cif"
        ],
        "fileContentClassName": "CDictData",
        "helpFile": "model_data#ligand_geometry"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Error attempting to merge geometry files - no libcheck script"
        },
        "202": {
          "description": "Error attempting to merge geometry files - failed creating working directory"
        },
        "203": {
          "description": "Error attempting to merge geometry files - setting libcheck parameters"
        },
        "204": {
          "description": "Error attempting to merge geometry files - running libcheck"
        },
        "205": {
          "description": "Error attempting to merge geometry files - failed to run libcheck"
        }
      }
    },
    "CElement": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CElement",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Chemical element ",
      "base_classes": [
        "COneWord"
      ],
      "immediate_parent": "COneWord",
      "mro": [
        "CElement",
        "COneWord",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "onlyEnumerators": true,
        "enumerators": [
          "H",
          "He",
          "Li",
          "Be",
          "B",
          "C",
          "N",
          "O",
          "F",
          "Ne",
          "Na",
          "Mg",
          "Al",
          "Si",
          "P",
          "S",
          "Cl",
          "Ar",
          "K",
          "Ca",
          "Sc",
          "Ti",
          "V",
          "Cr",
          "Mn",
          "Fe",
          "Co",
          "Ni",
          "Cu",
          "Zn",
          "Ga",
          "Ge",
          "As",
          "Se",
          "Br",
          "Kr",
          "Rb",
          "Sr",
          "Y",
          "Zr",
          "Nb",
          "Mo",
          "Tc",
          "Ru",
          "Rh",
          "Pd",
          "Ag",
          "Cd",
          "In",
          "Sn",
          "Sb",
          "Te",
          "I",
          "Xe",
          "Cs",
          "Ba",
          "La",
          "Ce",
          "Pr",
          "Nd",
          "Pm",
          "Sm",
          "Eu",
          "Gd",
          "Tb",
          "Dy",
          "Ho",
          "Er",
          "Tm",
          "Yb",
          "Lu",
          "Hf",
          "Ta",
          "W",
          "Re",
          "Os",
          "Ir",
          "Pt",
          "Au",
          "Hg",
          "Tl",
          "Pb",
          "Bi",
          "Po",
          "At",
          "Rn",
          "Fr",
          "Ra",
          "Ac",
          "Th",
          "Pa",
          "U",
          "Np",
          "Pu",
          "Am",
          "Cm",
          "Bk",
          "Cf",
          "Es",
          "Fm",
          "Md",
          "No",
          "Lr",
          "Rf",
          "Db",
          "Sg",
          "Bh",
          "Hs",
          "Mt",
          "Ds",
          "Rg",
          "Cn"
        ]
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Word contains white space item"
        }
      }
    },
    "CEnsemble": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CEnsemble",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "An ensemble of models. Typically, this would be a set of related\nPDB files, but models could also be xtal or EM maps. This should\nbe indicated by the types entry.\nA single ensemble is a CList of structures.",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CEnsemble",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "label": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "number": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": 1,
            "enumerators": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ],
            "menuText": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12"
            ]
          }
        },
        "use": {
          "class": "<class 'core.CCP4Data.CBoolean'>",
          "qualifiers": {
            "default": true
          }
        },
        "pdbItemList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4ModelData.CPdbEnsembleItem'>"
          },
          "qualifiers": {
            "listMinLength": 1
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Ensemble",
        "allowUndefined": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CEnsembleList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CEnsembleList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CEnsembleList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CEnsemble'>"
      }
    },
    "CEnsemblePdbDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CEnsemblePdbDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A PDB coordinate file containing ensemble of structures as 'NMR' models",
      "base_classes": [
        "CPdbDataFile"
      ],
      "immediate_parent": "CPdbDataFile",
      "mro": [
        "CEnsemblePdbDataFile",
        "CPdbDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 0,
            "enumerators": [
              0,
              1,
              2,
              3,
              4
            ],
            "onlyEnumerators": true,
            "menuText": [
              "unknown",
              "model",
              "homolog",
              "fragment",
              "heavy atoms"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        },
        "selection": {
          "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAtomSelection'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "mustExist": false,
        "fromPreviousJob": false,
        "jobCombo": true,
        "mimeTypeName": "chemical/x-pdb",
        "mimeTypeDescription": "Model coordinates",
        "fileLabel": "ensemble coordinates",
        "fileExtensions": [
          "pdb",
          "cif",
          "mmcif",
          "ent"
        ],
        "fileContentClassName": "CPdbData",
        "isDirectory": false,
        "saveToDb": true,
        "requiredSubType": null,
        "requiredContentFlag": null,
        "guiLabel": "Model ensemble",
        "toolTip": "An ensemble of model coordinates in PDB or mmCIF format",
        "ifInfo": true,
        "ifAtomSelection": false,
        "downloadModes": [],
        "helpFile": "model_data#ensemble_coordinate_files"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "ifAtomSelection": {
          "type": "<class 'bool'>",
          "description": "Atom selection option enabled"
        }
      },
      "ERROR_CODES": {
        "401": {
          "description": "Failed running coord_format to fix coordinate file - is it a PDB file?"
        },
        "402": {
          "severity": 2,
          "description": "Badly formated PDB file fixed"
        },
        "403": {
          "severity": 2,
          "description": "Fixed by removing text"
        },
        "404": {
          "severity": 2,
          "description": "Fixed by adding text"
        },
        "405": {
          "description": "There are no ATOM or HETATM lines in the PDB file"
        },
        "410": {
          "description": "No file loaded - can not convert coordinate file format"
        },
        "411": {
          "description": "Failed loading file - can not convert coordinate file format"
        },
        "412": {
          "description": "Can not overwrite existing file - can not convert coordinate file format"
        },
        "413": {
          "description": "Failed writing coordinate file"
        },
        "414": {
          "description": "Failed to identify coordinate file format"
        }
      }
    },
    "CHhpredData": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CHhpredData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CHhpredData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "alignmentList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4ModelData.CHhpredItem'>"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Failed to read HHPred file"
        },
        "202": {
          "description": "Failed to load iotbx software to read HHPred file"
        }
      }
    },
    "CHhpredDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CHhpredDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CHhpredDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "HHPred sequence search",
        "mimeTypeName": "application/HHPred-alignments",
        "mimeTypeDescription": "HHPred sequence search results",
        "guiLabel": "HHPred results",
        "tooltip": "Output from HHPred search",
        "fileExtensions": [
          "hhr"
        ],
        "fileContentClassName": "CHhpredData",
        "helpFile": "model_data#ali"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CHhpredItem": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CHhpredItem",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CHhpredItem",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "identifier": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "chain": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMDLMolDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CMDLMolDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A molecule definition file (MDL)",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CMDLMolDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "mol",
        "mimeTypeName": "chemical/x-mdl-molfile",
        "mimeTypeDescription": "MDL Molfile",
        "guiLabel": "Mol file",
        "toolTip": "Structure geometry of ligands for refinement in MDL mol format",
        "fileExtensions": [
          "mol",
          "sdf"
        ],
        "fileContentClassName": null,
        "helpFile": "model_data#mol_file"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CMol2DataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CMol2DataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A molecule definition file (MOL2)",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CMol2DataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "mol2",
        "mimeTypeName": "chemical/x-mol2",
        "mimeTypeDescription": "MOL2 file",
        "guiLabel": "MOL2 file",
        "toolTip": "Structure geometry of ligands for refinement in MOL2 format",
        "fileExtensions": [
          "mol2"
        ],
        "fileContentClassName": null,
        "helpFile": "model_data#mol2_file"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CMonomer": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CMonomer",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A monomer compound. ?smiles",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMonomer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "identifier": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "The name you use for the monomer"
          }
        },
        "formula": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "The formula for the monomer"
          }
        },
        "dictionaryName": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "The REFMAC dictionary name if not the same as the name"
          }
        },
        "smiles": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "The smiles string for the monomer"
          }
        }
      },
      "CONTENTS_ORDER": [
        "identifier",
        "formula",
        "dictionaryName",
        "smiles"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "COccRefmacSelectionList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "COccRefmacSelectionList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "COccRefmacSelectionList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAtomRefmacSelectionOccupancy'>"
      }
    },
    "COccRelationRefmacList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "COccRelationRefmacList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "COccRelationRefmacList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAtomRefmacSelectionGroups'>"
      }
    },
    "CPdbData": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CPdbData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "Contents of a PDB file - a subset with functionality for GUI",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CPdbData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Unable to load mmdb - ensure LD_LIBRARY_PATH is set"
        },
        "102": {
          "description": "Error reading PDB file into MMDB object"
        },
        "103": {
          "description": "Residue range selection does not specify chain"
        },
        "104": {
          "description": "Residue range selection specifies non-existant chain id"
        },
        "105": {
          "description": "Residue range selection - no residues selected"
        },
        "106": {
          "description": "Residue range selection - residue number is not an integer"
        },
        "112": {
          "description": "Atom selection failed. Failed creating CMMDBManager object"
        },
        "113": {
          "description": "Atom selection failed. Faied reading coordinate file."
        },
        "114": {
          "description": "Atom selection failed. Failed parsing command"
        },
        "115": {
          "description": "Atom selection failed. Error creating PPCAtom"
        },
        "116": {
          "description": "Atom selection failed. Error in GetSelIndex"
        },
        "117": {
          "description": "Atom selection failed. Error loading selection tree"
        },
        "118": {
          "description": "Atom selection failed. Error applying selection tree"
        },
        "119": {
          "description": "Creating new PDB file failed on writing file"
        },
        "120": {
          "description": "Creating new PDB file failed converting from fractional coordinates"
        }
      }
    },
    "CPdbDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CPdbDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CPdbDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 0,
            "enumerators": [
              0,
              1,
              2,
              3,
              4
            ],
            "onlyEnumerators": true,
            "menuText": [
              "unknown",
              "model",
              "homolog",
              "fragment",
              "heavy atoms"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        },
        "selection": {
          "class": "<class 'ccp4x.data_scan.CCP4ModelData.CAtomSelection'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "mustExist": false,
        "fromPreviousJob": false,
        "jobCombo": true,
        "mimeTypeName": "chemical/x-pdb",
        "mimeTypeDescription": "Model coordinates",
        "fileLabel": "coordinates",
        "fileExtensions": [
          "pdb",
          "cif",
          "mmcif",
          "ent"
        ],
        "fileContentClassName": "CPdbData",
        "isDirectory": false,
        "saveToDb": true,
        "requiredSubType": null,
        "requiredContentFlag": null,
        "guiLabel": "Atomic model",
        "toolTip": "A model coordinate file in PDB or mmCIF format",
        "ifInfo": true,
        "ifAtomSelection": false,
        "downloadModes": [
          "ebiPdb",
          "rcsbPdb",
          "uniprotAFPdb"
        ],
        "helpFile": "model_data#coordinate_files"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "ifAtomSelection": {
          "type": "<class 'bool'>",
          "description": "Atom selection option enabled"
        }
      },
      "ERROR_CODES": {
        "401": {
          "description": "Failed running coord_format to fix coordinate file - is it a PDB file?"
        },
        "402": {
          "severity": 2,
          "description": "Badly formated PDB file fixed"
        },
        "403": {
          "severity": 2,
          "description": "Fixed by removing text"
        },
        "404": {
          "severity": 2,
          "description": "Fixed by adding text"
        },
        "405": {
          "description": "There are no ATOM or HETATM lines in the PDB file"
        },
        "410": {
          "description": "No file loaded - can not convert coordinate file format"
        },
        "411": {
          "description": "Failed loading file - can not convert coordinate file format"
        },
        "412": {
          "description": "Can not overwrite existing file - can not convert coordinate file format"
        },
        "413": {
          "description": "Failed writing coordinate file"
        },
        "414": {
          "description": "Failed to identify coordinate file format"
        }
      }
    },
    "CPdbDataFileList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CPdbDataFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CPdbDataFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CPdbDataFile'>",
        "qualifiers": {
          "allowUndefined": false,
          "mustExist": true
        }
      }
    },
    "CPdbEnsembleItem": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CPdbEnsembleItem",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CPdbEnsembleItem",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "structure": {
          "class": "<class 'ccp4x.data_scan.CCP4ModelData.CPdbDataFile'>",
          "qualifiers": {
            "allowUndefined": false,
            "mustExist": true,
            "fromPreviousJob": true,
            "ifAtomSelection": true
          }
        },
        "identity_to_target": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0,
            "max": 1.0
          }
        },
        "rms_to_target": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0,
            "max": 100.0
          }
        }
      },
      "CONTENTS_ORDER": [
        "structure",
        "identity_to_target",
        "rms_to_target"
      ],
      "QUALIFIERS": {
        "guiLabel": "Structure in ensemble",
        "toolTip": "Homologous model and its similarity to the target structure",
        "allowUndefined": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "No sequence identity or structure RMS to target set"
        }
      }
    },
    "CResidueRange": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CResidueRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A residue range selection",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CResidueRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "chainId": {
          "class": "<class 'core.CCP4Data.COneWord'>",
          "qualifiers": {
            "default": ""
          }
        },
        "firstRes": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "lastRes": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        }
      },
      "CONTENTS_ORDER": [
        "chainId",
        "firstRes",
        "lastRes"
      ],
      "QUALIFIERS": {
        "pdbFileKey": null
      },
      "QUALIFIERS_ORDER": [
        "pdbFileKey"
      ],
      "QUALIFIERS_DEFINITION": {
        "pdbFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CPdbDataFile in the same CContainer"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CResidueRangeList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CResidueRangeList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list of residue range selections",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CResidueRangeList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CResidueRange'>"
      }
    },
    "CSeqAlignDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSeqAlignDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A (multiple) sequence alignment file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CSeqAlignDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "mustExist": false,
        "fromPreviousJob": false,
        "jobCombo": true,
        "mimeTypeName": "application/CCP4-seqalign",
        "mimeTypeDescription": "Sequence alignment file",
        "fileLabel": null,
        "fileExtensions": [
          "aln",
          "pir",
          "fasta",
          "msf",
          "phy"
        ],
        "fileContentClassName": "CSequenceAlignment",
        "isDirectory": false,
        "saveToDb": true,
        "requiredSubType": null,
        "requiredContentFlag": null,
        "guiLabel": "Aligned sequences",
        "toolTip": "Multiple sequence alignment in any of the common formats (pir,fasta..)",
        "helpFile": "model_data#alignments",
        "requiredSequences": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "requiredSequences"
      ],
      "QUALIFIERS_DEFINITION": {
        "requiredSequences": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed numbers of sequences in file (usually [2])"
        }
      },
      "ERROR_CODES": {
        "202": {
          "description": "Error reading from file"
        },
        "203": {
          "description": "Unknown alignment file format"
        },
        "204": {
          "description": "Can not read Blast or HHPred file format"
        },
        "205": {
          "description": "Error reading identifiers from multi-record file"
        },
        "206": {
          "description": "Error attempting to identify file format"
        },
        "250": {
          "description": "Alignment file format not recognised - can not convert"
        },
        "251": {
          "description": "Alignment file conversion failed to overwrite existing file"
        },
        "252": {
          "description": "Alignment file conversion failed writing file"
        },
        "260": {
          "description": "Alignment file does not contain required number of sequences"
        }
      }
    },
    "CSeqDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSeqDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A sequence file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CSeqDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "sequence",
        "mimeTypeName": "application/CCP4-seq",
        "mimeTypeDescription": "Sequence file",
        "guiLabel": "Sequence",
        "tooltip": "Sequence in any of the common formats (pir,fasta..)",
        "fileExtensions": [
          "seq",
          "pir",
          "fasta"
        ],
        "fileContentClassName": "CSequence",
        "downloadModes": [
          "uniprotFasta"
        ],
        "helpFile": "model_data#sequences"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Error reading sequence file"
        },
        "202": {
          "description": "Error in BioPython attempting to identify file type"
        }
      }
    },
    "CSeqDataFileList": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSeqDataFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CSeqDataFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "150": {
          "description": "No file content information"
        },
        "151": {
          "description": "Two sequences have the same identifier"
        },
        "152": {
          "description": "Failed in merging sequence files to read sequence file"
        },
        "153": {
          "description": "Failed in merging sequence files to write merged file"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ModelData.CSeqDataFile'>",
        "qualifiers": {
          "allowUndefined": false
        }
      }
    },
    "CSequence": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSequence",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A string of sequence one-letter codes\nNeed to be able to parse common seq file formats\nDo we need to support alternative residues\nWhat about nucleic/polysach?",
      "base_classes": [
        "CData",
        "CBioPythonSeqInterface"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CSequence",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers",
        "CBioPythonSeqInterface"
      ],
      "CONTENTS": {
        "identifier": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "Description of sequence",
            "minlength": 4
          }
        },
        "referenceDb": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": false,
            "default": "unk",
            "enumerators": [
              "unk",
              "sp",
              "tr",
              "pdb"
            ],
            "menuText": [
              "Unknown",
              "UniProt/Swiss-Prot",
              "UniProt/TrEMBL",
              "ProteinDatabank"
            ]
          }
        },
        "reference": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "Optional reference for sequence"
          }
        },
        "name": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "User friendly name of sequence"
          }
        },
        "description": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "User friendly description of sequence"
          }
        },
        "sequence": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "Single letter sequence (white space and dash ignored)"
          }
        },
        "moleculeType": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "PROTEIN",
              "NUCLEIC"
            ],
            "menuText": [
              "protein",
              "nucleic acid"
            ],
            "default": "PROTEIN",
            "toolTip": "Molecule type"
          }
        }
      },
      "CONTENTS_ORDER": [
        "identifier",
        "name",
        "description",
        "referenceDb",
        "reference",
        "moleculeType",
        "sequence"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Sequence undefined",
          "severity": 1
        },
        "202": {
          "description": "error reading from file"
        },
        "203": {
          "description": "Comparing sequences: Sequence item different"
        },
        "204": {
          "description": "Comparing sequences: One item set - the other is unset"
        },
        "401": {
          "description": "Attempting to load from non-existent file"
        },
        "402": {
          "description": "Error reading from file"
        },
        "403": {
          "description": "Unknown sequence file format"
        },
        "405": {
          "description": "Error reading identifiers from multi-record file"
        },
        "406": {
          "description": "Error opening file"
        },
        "407": {
          "description": "The 'PIR' file did not have the correct format"
        },
        "408": {
          "severity": 2,
          "description": "The 'PIR' file format was corrected"
        },
        "409": {
          "description": "Error opening file to write"
        },
        "410": {
          "description": "Error attempting to write out sequence file"
        },
        "411": {
          "description": "Error attempting to create a temporary sequence file"
        },
        "412": {
          "description": "Sequence file is empty"
        },
        "413": {
          "description": "Unable to read BLAST format file"
        },
        "414": {
          "description": "Unable to read hhpred format file"
        }
      }
    },
    "CSequenceAlignment": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSequenceAlignment",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "An alignment of two or more sequences.\nEach sequence is obviously related to class CSequence, but\nwill also contain gaps relevant to the alignment. We could\nimplement the contents as a list of CSequence objects?\nThe alignment is typically formatted in a file as consecutive \nor interleaved sequences.",
      "base_classes": [
        "CData",
        "CBioPythonSeqInterface"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CSequenceAlignment",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers",
        "CBioPythonSeqInterface"
      ],
      "CONTENTS": {
        "identifier": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "toolTip": "Optional convenient name for sequence alignment"
          }
        },
        "moleculeType": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "PROTEIN",
              "NUCLEIC"
            ],
            "menuText": [
              "protein",
              "nucleic acid"
            ],
            "default": "PROTEIN",
            "toolTip": "Molecule type"
          }
        }
      },
      "CONTENTS_ORDER": [
        "identifier",
        "moleculeType"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CSequenceMeta": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSequenceMeta",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CSequenceMeta",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "uniprotId": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "organism": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "expressionSystem": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "401": {
          "description": "No uniprot id available"
        },
        "402": {
          "description": "No uniprot xml file available to read"
        },
        "403": {
          "description": "No project id provided to determine uniprot xml filename"
        },
        "404": {
          "description": "Reading uniprot xml file failed"
        }
      }
    },
    "CSequenceString": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CSequenceString",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CSequenceString",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "401": {
          "description": "Non-alphabet character removed from sequence",
          "severity": 2
        },
        "402": {
          "description": "Invalid characters (BJOXZ) in sequence"
        },
        "403": {
          "description": "Sequence undefined",
          "severity": 2
        }
      }
    },
    "CTLSDataFile": {
      "module": "ccp4x.data_scan.CCP4ModelData",
      "class": "CTLSDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ModelData.py",
      "docstring": "A refmac TLS file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CTLSDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "tls",
        "mimeTypeName": "application/refmac-TLS",
        "mimeTypeDescription": "Refmac TLS file",
        "guiLabel": "TLS coefficients",
        "toolTip": "Definition of model domains for TLS refinement",
        "fileExtensions": [
          "tls"
        ],
        "fileContentClassName": null,
        "helpFile": "model_data#tls_file"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CImportedJobData": {
      "module": "ccp4x.data_scan.CCP4ImportedJobManager",
      "class": "CImportedJobData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ImportedJobManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CImportedJobData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "name": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "dataType": {
          "class": "<class 'core.CCP4Data.CI2DataType'>",
          "qualifiers": {
            "default": "CPdbDataFile"
          }
        },
        "label": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "fileName": {
          "class": "<class 'core.CCP4File.CDataFile'>",
          "qualifiers": {
            "mustExist": true,
            "saveToDb": true,
            "allowUndefined": false
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CImportedJobDataList": {
      "module": "ccp4x.data_scan.CCP4ImportedJobManager",
      "class": "CImportedJobDataList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ImportedJobManager.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CImportedJobDataList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4ImportedJobManager.CImportedJobData'>"
      }
    },
    "CImportedJobDefinition": {
      "module": "ccp4x.data_scan.CCP4ImportedJobManager",
      "class": "CImportedJobDefinition",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ImportedJobManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CContainer"
      ],
      "immediate_parent": "CContainer",
      "mro": [
        "CImportedJobDefinition",
        "CContainer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error parsing XML"
        },
        "102": {
          "description": "Missing information"
        },
        "103": {
          "description": "Unknown data class"
        },
        "104": {
          "description": "Error creating data object"
        },
        "105": {
          "description": "Error setting data object qualifiers"
        },
        "106": {
          "description": "Error loading container definition"
        },
        "107": {
          "description": "XML file does not have correct function defined in the header"
        },
        "108": {
          "description": "XML undefined error interpreting sub-container"
        },
        "109": {
          "description": "Error attempting to access unknown attribute",
          "severity": 2
        },
        "110": {
          "description": "Error creating sub-container"
        },
        "111": {
          "description": "XML file does not have expected pluginName defined in the header"
        },
        "113": {
          "description": "Attempting to add object that is not a CData"
        },
        "114": {
          "description": "Attempting to add object without valid name"
        },
        "115": {
          "description": "Attempting to add object with name that is already in container"
        },
        "116": {
          "description": "Error while attempting to add object"
        },
        "117": {
          "description": "Attempting to delete object with unrecognised name"
        },
        "118": {
          "description": "Error while attempting to delete object"
        },
        "119": {
          "description": "Error while attempting to set this container as object parent"
        },
        "120": {
          "description": "Attempting to add object of unrecognised class to container contents"
        },
        "121": {
          "description": "Error while attempting to add to container contents"
        },
        "122": {
          "description": "Error while attempting to make object from new content in container"
        },
        "123": {
          "description": "Unknown error while reading container header"
        },
        "124": {
          "description": "Definition of sub-content for data of class that does not require sub-content"
        },
        "125": {
          "description": "Unknown error while reading container content"
        },
        "126": {
          "description": "No id for sub-container in XML file"
        },
        "127": {
          "description": "Attempting to load container data from file that does not exist"
        },
        "128": {
          "description": "Unknown error creating XML for sub-container"
        },
        "129": {
          "description": "Error retieving data object for XML"
        },
        "130": {
          "description": "Error saving data object to XML"
        },
        "131": {
          "description": "Unknown error writing container contents to XML file"
        },
        "132": {
          "description": "Error changing object name - no name given"
        },
        "133": {
          "description": "Error changing object name - object with new name already exists"
        },
        "134": {
          "description": "Error changing object name - no object with old name"
        },
        "135": {
          "description": "Unknown error changing object name"
        },
        "136": {
          "description": "Error inserting object in container data order"
        },
        "137": {
          "description": "Unknown error restoring data from database"
        },
        "138": {
          "description": "Attempting to copy from otherContainer which is not a CContainer"
        },
        "139": {
          "severity": 2,
          "description": "Attempting to copy data which is not in this container"
        },
        "140": {
          "severity": 2,
          "description": "Attempting to copy data which is not in the other container"
        },
        "141": {
          "severity": 2,
          "description": "Unknown error copying data"
        },
        "142": {
          "description": "Unrecognised class name in file"
        },
        "143": {
          "description": "Item in file does not have an id"
        },
        "144": {
          "description": "Item id in file is not unique"
        },
        "145": {
          "description": "Failed setting command line argument"
        },
        "146": {
          "description": "Insufficient arguments at end of command line"
        },
        "147": {
          "description": "Error handling XmlDataFile for file element in def xml"
        },
        "148": {
          "description": "XmlDataFile for file element in def xml: file not found"
        },
        "149": {
          "description": "XmlDataFile for file element in def xml: can not read xml"
        },
        "150": {
          "description": "loadDataFromXml could not find plugin def file"
        },
        "160": {
          "description": "Error in adding guiAdmin to CContainer"
        },
        "161": {
          "description": "Error adding object to guiAdmin"
        },
        "162": {
          "description": "Error adding guiAdmin to CContainer"
        },
        "310": {
          "description": "Different number of file objects to compare"
        },
        "311": {
          "description": "Different number of XData objects to compare"
        },
        "312": {
          "description": "Different number of key-value pairs to compare"
        },
        "313": {
          "description": "Different values of key-value pair"
        },
        "314": {
          "description": "Error running comparison of object"
        }
      }
    },
    "CAngle": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CAngle",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "An angle",
      "base_classes": [
        "CFloat"
      ],
      "immediate_parent": "CFloat",
      "mro": [
        "CAngle",
        "CFloat",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "max": null,
        "min": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'float'>"
        },
        "max": {
          "description": "The inclusive maximum value"
        },
        "min": {
          "description": "The inclusive minimum value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CEulerRotation": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CEulerRotation",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CEulerRotation",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "alpha": {
          "class": "<class 'ccp4x.data_scan.CCP4MathsData.CAngle'>"
        },
        "beta": {
          "class": "<class 'ccp4x.data_scan.CCP4MathsData.CAngle'>"
        },
        "gamma": {
          "class": "<class 'ccp4x.data_scan.CCP4MathsData.CAngle'>"
        }
      },
      "CONTENTS_ORDER": [
        "alpha",
        "beta",
        "gamma"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMatrix33": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CMatrix33",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMatrix33",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CTransformation": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CTransformation",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CTransformation",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "translation": {
          "class": "<class 'ccp4x.data_scan.CCP4MathsData.CXyz'>"
        },
        "rotation": {
          "class": "<class 'ccp4x.data_scan.CCP4MathsData.CEulerRotation'>"
        }
      },
      "CONTENTS_ORDER": [
        "translation",
        "rotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CXyz": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CXyz",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CXyz",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "x": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "y": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "z": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Attempting arithmetic with inappropriate data type"
        },
        "202": {
          "description": "Attempting arithmetic in unset data object"
        },
        "203": {
          "description": "Attempting arithmetic with unset data object as argument"
        }
      }
    },
    "CXyzBox": {
      "module": "ccp4x.data_scan.CCP4MathsData",
      "class": "CXyzBox",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4MathsData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CXyzBox",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "xMin": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "yMin": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "zMin": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "xMax": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "yMax": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "zMax": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Maximum x,y or z value less than minimum"
        }
      }
    },
    "CAtomCountPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CAtomCountPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CAtomCountPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "nAtoms": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "nResidues": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [
        "nAtoms",
        "nResidues"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CDataReductionCCPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CDataReductionCCPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CDataReductionCCPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "spaceGroup": {
          "class": "<class 'core.CCP4XtalData.CSpaceGroup'>"
        },
        "highResLimit": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "ccHalf": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        }
      },
      "CONTENTS_ORDER": [
        "spaceGroup",
        "highResLimit",
        "ccHalf"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CDataReductionPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CDataReductionPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CDataReductionPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "spaceGroup": {
          "class": "<class 'core.CCP4XtalData.CSpaceGroup'>"
        },
        "highResLimit": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "rMeas": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        }
      },
      "CONTENTS_ORDER": [
        "spaceGroup",
        "highResLimit",
        "rMeas"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CExpPhasPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CExpPhasPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CExpPhasPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "FOM": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "CFOM": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "Hand1Score": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "Hand2Score": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "CC": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RFactor": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RFree": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "FOM",
        "CFOM",
        "Hand1Score",
        "Hand2Score",
        "CC",
        "RFactor",
        "RFree",
        "annotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CModelBuildPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CModelBuildPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CModelBuildPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "RFactor": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "completeness": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "RFactor",
        "completeness",
        "annotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CPairefPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CPairefPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CPairefPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "cutoff": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        }
      },
      "CONTENTS_ORDER": [
        "cutoff"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CPerformanceIndicator": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CPerformanceIndicator",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "value": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "value",
        "annotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CPhaseErrorPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CPhaseErrorPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CPhaseErrorPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "phaseError": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "weightedPhaseError": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "reflectionCorrelation": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        }
      },
      "CONTENTS_ORDER": [
        "phaseError",
        "weightedPhaseError",
        "reflectionCorrelation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CRefinementPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CRefinementPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CRefinementPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "RFactor": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RFree": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RMSBond": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RMSAngle": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "weightUsed": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "RFactor",
        "RFree",
        "RMSBond",
        "RMSAngle",
        "weightUsed",
        "annotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CServalcatPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CServalcatPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CServalcatPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "RFactor": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "RFree": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "R": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "R1Factor": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "R1Free": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "R1": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0
          }
        },
        "CCFwork_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "CCFfree_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "CCF_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "CCIwork_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "CCIfree_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "CCI_avg": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "FSCaverage": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": -1.0
          }
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "RFactor",
        "RFree",
        "R",
        "R1Factor",
        "R1Free",
        "R1",
        "FSCaverage",
        "annotation"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CSuperposePerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CSuperposePerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CSuperposePerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "RMSxyz": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "nResidues": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [
        "RMSxyz",
        "nResidues"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CTestObsConversionsPerformance": {
      "module": "ccp4x.data_scan.CCP4PerformanceData",
      "class": "CTestObsConversionsPerformance",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4PerformanceData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CPerformanceIndicator"
      ],
      "immediate_parent": "CPerformanceIndicator",
      "mro": [
        "CTestObsConversionsPerformance",
        "CPerformanceIndicator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "columnLabelsString": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "columnLabelsString"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "301": {
          "description": "Data value not set"
        },
        "302": {
          "description": "Performance indicator value difference greater than tolereance"
        },
        "303": {
          "description": "Performance indicator value different"
        },
        "304": {
          "description": "Performance indicator value difference greater than tolereance - but improved",
          "severity": 2
        },
        "305": {
          "description": "Performance indicator not used",
          "severity": 0
        }
      }
    },
    "CCootHistoryDataFile": {
      "module": "ccp4x.data_scan.CCP4CootData",
      "class": "CCootHistoryDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CootData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CCootHistoryDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 2,
            "enumerators": [
              1,
              2
            ],
            "onlyEnumerators": true,
            "menuText": [
              "Coot 0-state.scm",
              "Coot history.scm"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/coot-script",
        "mimeTypeDescription": "Coot history/script file",
        "fileExtensions": [
          "scm",
          "py"
        ],
        "fileContentClassName": null,
        "guiLabel": "Coot history",
        "fileLabel": "coot_history",
        "toolTip": "history.scm or 0-state.scm file from Coot"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CPreferences": {
      "module": "ccp4x.data_scan.CCP4Preferences",
      "class": "CPreferences",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Preferences.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CContainer"
      ],
      "immediate_parent": "CContainer",
      "mro": [
        "CPreferences",
        "CContainer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error parsing XML"
        },
        "102": {
          "description": "Missing information"
        },
        "103": {
          "description": "Unknown data class"
        },
        "104": {
          "description": "Error creating data object"
        },
        "105": {
          "description": "Error setting data object qualifiers"
        },
        "106": {
          "description": "Error loading container definition"
        },
        "107": {
          "description": "XML file does not have correct function defined in the header"
        },
        "108": {
          "description": "XML undefined error interpreting sub-container"
        },
        "109": {
          "description": "Error attempting to access unknown attribute",
          "severity": 2
        },
        "110": {
          "description": "Error creating sub-container"
        },
        "111": {
          "description": "XML file does not have expected pluginName defined in the header"
        },
        "113": {
          "description": "Attempting to add object that is not a CData"
        },
        "114": {
          "description": "Attempting to add object without valid name"
        },
        "115": {
          "description": "Attempting to add object with name that is already in container"
        },
        "116": {
          "description": "Error while attempting to add object"
        },
        "117": {
          "description": "Attempting to delete object with unrecognised name"
        },
        "118": {
          "description": "Error while attempting to delete object"
        },
        "119": {
          "description": "Error while attempting to set this container as object parent"
        },
        "120": {
          "description": "Attempting to add object of unrecognised class to container contents"
        },
        "121": {
          "description": "Error while attempting to add to container contents"
        },
        "122": {
          "description": "Error while attempting to make object from new content in container"
        },
        "123": {
          "description": "Unknown error while reading container header"
        },
        "124": {
          "description": "Definition of sub-content for data of class that does not require sub-content"
        },
        "125": {
          "description": "Unknown error while reading container content"
        },
        "126": {
          "description": "No id for sub-container in XML file"
        },
        "127": {
          "description": "Attempting to load container data from file that does not exist"
        },
        "128": {
          "description": "Unknown error creating XML for sub-container"
        },
        "129": {
          "description": "Error retieving data object for XML"
        },
        "130": {
          "description": "Error saving data object to XML"
        },
        "131": {
          "description": "Unknown error writing container contents to XML file"
        },
        "132": {
          "description": "Error changing object name - no name given"
        },
        "133": {
          "description": "Error changing object name - object with new name already exists"
        },
        "134": {
          "description": "Error changing object name - no object with old name"
        },
        "135": {
          "description": "Unknown error changing object name"
        },
        "136": {
          "description": "Error inserting object in container data order"
        },
        "137": {
          "description": "Unknown error restoring data from database"
        },
        "138": {
          "description": "Attempting to copy from otherContainer which is not a CContainer"
        },
        "139": {
          "severity": 2,
          "description": "Attempting to copy data which is not in this container"
        },
        "140": {
          "severity": 2,
          "description": "Attempting to copy data which is not in the other container"
        },
        "141": {
          "severity": 2,
          "description": "Unknown error copying data"
        },
        "142": {
          "description": "Unrecognised class name in file"
        },
        "143": {
          "description": "Item in file does not have an id"
        },
        "144": {
          "description": "Item id in file is not unique"
        },
        "145": {
          "description": "Failed setting command line argument"
        },
        "146": {
          "description": "Insufficient arguments at end of command line"
        },
        "147": {
          "description": "Error handling XmlDataFile for file element in def xml"
        },
        "148": {
          "description": "XmlDataFile for file element in def xml: file not found"
        },
        "149": {
          "description": "XmlDataFile for file element in def xml: can not read xml"
        },
        "150": {
          "description": "loadDataFromXml could not find plugin def file"
        },
        "160": {
          "description": "Error in adding guiAdmin to CContainer"
        },
        "161": {
          "description": "Error adding object to guiAdmin"
        },
        "162": {
          "description": "Error adding guiAdmin to CContainer"
        },
        "310": {
          "description": "Different number of file objects to compare"
        },
        "311": {
          "description": "Different number of XData objects to compare"
        },
        "312": {
          "description": "Different number of key-value pairs to compare"
        },
        "313": {
          "description": "Different values of key-value pair"
        },
        "314": {
          "description": "Error running comparison of object"
        }
      }
    },
    "CCustomComFile": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomComFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CCustomComFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "text": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "name": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "default": "./com.txt"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CCustomComFileList": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomComFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CCustomComFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4CustomTaskManager.CCustomComFile'>"
      }
    },
    "CCustomTaskDefinition": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomTaskDefinition",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CContainer"
      ],
      "immediate_parent": "CContainer",
      "mro": [
        "CCustomTaskDefinition",
        "CContainer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error parsing XML"
        },
        "102": {
          "description": "Missing information"
        },
        "103": {
          "description": "Unknown data class"
        },
        "104": {
          "description": "Error creating data object"
        },
        "105": {
          "description": "Error setting data object qualifiers"
        },
        "106": {
          "description": "Error loading container definition"
        },
        "107": {
          "description": "XML file does not have correct function defined in the header"
        },
        "108": {
          "description": "XML undefined error interpreting sub-container"
        },
        "109": {
          "description": "Error attempting to access unknown attribute",
          "severity": 2
        },
        "110": {
          "description": "Error creating sub-container"
        },
        "111": {
          "description": "XML file does not have expected pluginName defined in the header"
        },
        "113": {
          "description": "Attempting to add object that is not a CData"
        },
        "114": {
          "description": "Attempting to add object without valid name"
        },
        "115": {
          "description": "Attempting to add object with name that is already in container"
        },
        "116": {
          "description": "Error while attempting to add object"
        },
        "117": {
          "description": "Attempting to delete object with unrecognised name"
        },
        "118": {
          "description": "Error while attempting to delete object"
        },
        "119": {
          "description": "Error while attempting to set this container as object parent"
        },
        "120": {
          "description": "Attempting to add object of unrecognised class to container contents"
        },
        "121": {
          "description": "Error while attempting to add to container contents"
        },
        "122": {
          "description": "Error while attempting to make object from new content in container"
        },
        "123": {
          "description": "Unknown error while reading container header"
        },
        "124": {
          "description": "Definition of sub-content for data of class that does not require sub-content"
        },
        "125": {
          "description": "Unknown error while reading container content"
        },
        "126": {
          "description": "No id for sub-container in XML file"
        },
        "127": {
          "description": "Attempting to load container data from file that does not exist"
        },
        "128": {
          "description": "Unknown error creating XML for sub-container"
        },
        "129": {
          "description": "Error retieving data object for XML"
        },
        "130": {
          "description": "Error saving data object to XML"
        },
        "131": {
          "description": "Unknown error writing container contents to XML file"
        },
        "132": {
          "description": "Error changing object name - no name given"
        },
        "133": {
          "description": "Error changing object name - object with new name already exists"
        },
        "134": {
          "description": "Error changing object name - no object with old name"
        },
        "135": {
          "description": "Unknown error changing object name"
        },
        "136": {
          "description": "Error inserting object in container data order"
        },
        "137": {
          "description": "Unknown error restoring data from database"
        },
        "138": {
          "description": "Attempting to copy from otherContainer which is not a CContainer"
        },
        "139": {
          "severity": 2,
          "description": "Attempting to copy data which is not in this container"
        },
        "140": {
          "severity": 2,
          "description": "Attempting to copy data which is not in the other container"
        },
        "141": {
          "severity": 2,
          "description": "Unknown error copying data"
        },
        "142": {
          "description": "Unrecognised class name in file"
        },
        "143": {
          "description": "Item in file does not have an id"
        },
        "144": {
          "description": "Item id in file is not unique"
        },
        "145": {
          "description": "Failed setting command line argument"
        },
        "146": {
          "description": "Insufficient arguments at end of command line"
        },
        "147": {
          "description": "Error handling XmlDataFile for file element in def xml"
        },
        "148": {
          "description": "XmlDataFile for file element in def xml: file not found"
        },
        "149": {
          "description": "XmlDataFile for file element in def xml: can not read xml"
        },
        "150": {
          "description": "loadDataFromXml could not find plugin def file"
        },
        "160": {
          "description": "Error in adding guiAdmin to CContainer"
        },
        "161": {
          "description": "Error adding object to guiAdmin"
        },
        "162": {
          "description": "Error adding guiAdmin to CContainer"
        },
        "310": {
          "description": "Different number of file objects to compare"
        },
        "311": {
          "description": "Different number of XData objects to compare"
        },
        "312": {
          "description": "Different number of key-value pairs to compare"
        },
        "313": {
          "description": "Different values of key-value pair"
        },
        "314": {
          "description": "Error running comparison of object"
        }
      }
    },
    "CCustomTaskFileFunction": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomTaskFileFunction",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CCustomTaskFileFunction",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "enumerators": [
          "unknown",
          "input",
          "output",
          "control parameter",
          "log"
        ]
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CCustomTaskParam": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomTaskParam",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CCustomTaskParam",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "name": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "dataType": {
          "class": "<class 'core.CCP4Data.CI2DataType'>",
          "qualifiers": {
            "default": "CPdbDataFile"
          }
        },
        "label": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "obligatory": {
          "class": "<class 'core.CCP4Data.CBoolean'>",
          "qualifiers": {
            "default": true
          }
        },
        "saveDataToDb": {
          "class": "<class 'core.CCP4Data.CBoolean'>",
          "qualifiers": {
            "default": false
          }
        },
        "function": {
          "class": "<class 'ccp4x.data_scan.CCP4CustomTaskManager.CCustomTaskFileFunction'>",
          "qualifiers": {
            "default": "input"
          }
        },
        "mergeTo": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "splitColumns": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "requiredContentType": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'core.CCP4Data.CBoolean'>"
          }
        },
        "outputFilePath": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CCustomTaskParamList": {
      "module": "ccp4x.data_scan.CCP4CustomTaskManager",
      "class": "CCustomTaskParamList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4CustomTaskManager.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CCustomTaskParamList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4CustomTaskManager.CCustomTaskParam'>"
      }
    },
    "CBaseData": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CBaseData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "Base class for simple classes",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "charWidth": 10
      },
      "QUALIFIERS_ORDER": [
        "charWidth"
      ],
      "QUALIFIERS_DEFINITION": {
        "charWidth": {
          "type": "<class 'int'>"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CBoolean": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CBoolean",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A Boolean",
      "base_classes": [
        "CBaseData"
      ],
      "immediate_parent": "CBaseData",
      "mro": [
        "CBoolean",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "menuText": [
          "NotImplemented",
          "NotImplemented"
        ]
      },
      "QUALIFIERS_ORDER": [
        "charWidth"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'bool'>"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of two string descriptions for true and false"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "not allowed value"
        }
      }
    },
    "CCollection": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CCollection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
      }
    },
    "CDict": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CDict",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CCollection"
      ],
      "immediate_parent": "CCollection",
      "mro": [
        "CDict",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": {}
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Attempting to access unknown item"
        },
        "102": {
          "description": "Unknown error trying to create new item"
        },
        "103": {
          "description": "Attempting to add item which is not appropriate class"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
      }
    },
    "CFloat": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CFloat",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A float",
      "base_classes": [
        "CBaseData"
      ],
      "immediate_parent": "CBaseData",
      "mro": [
        "CFloat",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "max": null,
        "min": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'float'>"
        },
        "max": {
          "description": "The inclusive maximum value"
        },
        "min": {
          "description": "The inclusive minimum value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CFloatRange": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CFloatRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "Two floats defining start and end of range",
      "base_classes": [
        "CRange"
      ],
      "immediate_parent": "CRange",
      "mro": [
        "CFloatRange",
        "CRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "start": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CFloat'>"
        },
        "end": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CFloat'>"
        }
      },
      "CONTENTS_ORDER": [
        "start",
        "end"
      ],
      "QUALIFIERS": {
        "compare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "compare"
      ],
      "QUALIFIERS_DEFINITION": {
        "compare": {
          "type": "<class 'int'>",
          "description": "If value is  1/-1 the end value must be greater/less than start."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "End of range less than start"
        },
        "102": {
          "description": "End of range greater than start"
        }
      }
    },
    "CFollowFromJob": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CFollowFromJob",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CUUID"
      ],
      "immediate_parent": "CUUID",
      "mro": [
        "CFollowFromJob",
        "CUUID",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CI2DataType": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CI2DataType",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CI2DataType",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "enumerators": [
          "CPdbDataFile",
          "CSeqDataFile",
          "CObsDataFile",
          "CPhsDataFile",
          "CMapCoeffsDataFile",
          "CFreeRDataFile",
          "CMtzDataFile",
          "CDictDataFile",
          "CDataFile",
          "CInt",
          "CFloat",
          "CString",
          "CRefmacKeywordFile"
        ],
        "menuText": []
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CInt": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CInt",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "An integer",
      "base_classes": [
        "CBaseData"
      ],
      "immediate_parent": "CBaseData",
      "mro": [
        "CInt",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "max": null,
        "min": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'int'>"
        },
        "max": {
          "type": "<class 'int'>",
          "description": "The inclusive minimum allowed value"
        },
        "min": {
          "type": "<class 'int'>",
          "description": "The inclusive maximum allowed value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CIntRange": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CIntRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "Two integers defining start and end of range",
      "base_classes": [
        "CRange"
      ],
      "immediate_parent": "CRange",
      "mro": [
        "CIntRange",
        "CRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "start": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CInt'>"
        },
        "end": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [
        "start",
        "end"
      ],
      "QUALIFIERS": {
        "compare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "compare"
      ],
      "QUALIFIERS_DEFINITION": {
        "compare": {
          "type": "<class 'int'>",
          "description": "If value is  1/-1 the end value must be greater/less than start."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "End of range less than start"
        },
        "102": {
          "description": "End of range greater than start"
        }
      }
    },
    "CJobStatus": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CJobStatus",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "An integer",
      "base_classes": [
        "CInt"
      ],
      "immediate_parent": "CInt",
      "mro": [
        "CJobStatus",
        "CInt",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "max": null,
        "min": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'int'>"
        },
        "max": {
          "type": "<class 'int'>",
          "description": "The inclusive minimum allowed value"
        },
        "min": {
          "type": "<class 'int'>",
          "description": "The inclusive maximum allowed value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CJobTitle": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CJobTitle",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CJobTitle",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CList": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CCollection"
      ],
      "immediate_parent": "CCollection",
      "mro": [
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
      }
    },
    "COneWord": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "COneWord",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A single word string - no white space",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "COneWord",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Word contains white space item"
        }
      }
    },
    "COutputFileList": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "COutputFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "COutputFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": 250,
        "listCompare": "NotImplemented",
        "nameRoot": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare",
        "nameRoot"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        },
        "nameRoot": {
          "type": "<class 'str'>",
          "description": "Name hint for the base name of output files"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
      }
    },
    "CPatchSelection": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CPatchSelection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CPatchSelection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "taskName": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
        },
        "patch": {
          "class": "<class 'ccp4x.data_scan.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "taskName",
        "patch"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CRange": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "Base class for CIntRange and CFloatRange",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [
        "start",
        "end"
      ],
      "QUALIFIERS": {
        "compare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "compare"
      ],
      "QUALIFIERS_DEFINITION": {
        "compare": {
          "type": "<class 'int'>",
          "description": "If value is  1/-1 the end value must be greater/less than start."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "End of range less than start"
        },
        "102": {
          "description": "End of range greater than start"
        }
      }
    },
    "CRangeSelection": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CRangeSelection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CRangeSelection",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Range selection contains invalid character"
        },
        "202": {
          "description": "Range selection contains bad syntax"
        }
      }
    },
    "CString": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CString",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CBaseData"
      ],
      "immediate_parent": "CBaseData",
      "mro": [
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CUUID": {
      "module": "ccp4x.data_scan.CCP4Data",
      "class": "CUUID",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Data.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CUUID",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CPatchDefinition": {
      "module": "ccp4x.data_scan.CCP4ComFilePatchManager",
      "class": "CPatchDefinition",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4ComFilePatchManager.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CContainer"
      ],
      "immediate_parent": "CContainer",
      "mro": [
        "CPatchDefinition",
        "CContainer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error parsing XML"
        },
        "102": {
          "description": "Missing information"
        },
        "103": {
          "description": "Unknown data class"
        },
        "104": {
          "description": "Error creating data object"
        },
        "105": {
          "description": "Error setting data object qualifiers"
        },
        "106": {
          "description": "Error loading container definition"
        },
        "107": {
          "description": "XML file does not have correct function defined in the header"
        },
        "108": {
          "description": "XML undefined error interpreting sub-container"
        },
        "109": {
          "description": "Error attempting to access unknown attribute",
          "severity": 2
        },
        "110": {
          "description": "Error creating sub-container"
        },
        "111": {
          "description": "XML file does not have expected pluginName defined in the header"
        },
        "113": {
          "description": "Attempting to add object that is not a CData"
        },
        "114": {
          "description": "Attempting to add object without valid name"
        },
        "115": {
          "description": "Attempting to add object with name that is already in container"
        },
        "116": {
          "description": "Error while attempting to add object"
        },
        "117": {
          "description": "Attempting to delete object with unrecognised name"
        },
        "118": {
          "description": "Error while attempting to delete object"
        },
        "119": {
          "description": "Error while attempting to set this container as object parent"
        },
        "120": {
          "description": "Attempting to add object of unrecognised class to container contents"
        },
        "121": {
          "description": "Error while attempting to add to container contents"
        },
        "122": {
          "description": "Error while attempting to make object from new content in container"
        },
        "123": {
          "description": "Unknown error while reading container header"
        },
        "124": {
          "description": "Definition of sub-content for data of class that does not require sub-content"
        },
        "125": {
          "description": "Unknown error while reading container content"
        },
        "126": {
          "description": "No id for sub-container in XML file"
        },
        "127": {
          "description": "Attempting to load container data from file that does not exist"
        },
        "128": {
          "description": "Unknown error creating XML for sub-container"
        },
        "129": {
          "description": "Error retieving data object for XML"
        },
        "130": {
          "description": "Error saving data object to XML"
        },
        "131": {
          "description": "Unknown error writing container contents to XML file"
        },
        "132": {
          "description": "Error changing object name - no name given"
        },
        "133": {
          "description": "Error changing object name - object with new name already exists"
        },
        "134": {
          "description": "Error changing object name - no object with old name"
        },
        "135": {
          "description": "Unknown error changing object name"
        },
        "136": {
          "description": "Error inserting object in container data order"
        },
        "137": {
          "description": "Unknown error restoring data from database"
        },
        "138": {
          "description": "Attempting to copy from otherContainer which is not a CContainer"
        },
        "139": {
          "severity": 2,
          "description": "Attempting to copy data which is not in this container"
        },
        "140": {
          "severity": 2,
          "description": "Attempting to copy data which is not in the other container"
        },
        "141": {
          "severity": 2,
          "description": "Unknown error copying data"
        },
        "142": {
          "description": "Unrecognised class name in file"
        },
        "143": {
          "description": "Item in file does not have an id"
        },
        "144": {
          "description": "Item id in file is not unique"
        },
        "145": {
          "description": "Failed setting command line argument"
        },
        "146": {
          "description": "Insufficient arguments at end of command line"
        },
        "147": {
          "description": "Error handling XmlDataFile for file element in def xml"
        },
        "148": {
          "description": "XmlDataFile for file element in def xml: file not found"
        },
        "149": {
          "description": "XmlDataFile for file element in def xml: can not read xml"
        },
        "150": {
          "description": "loadDataFromXml could not find plugin def file"
        },
        "160": {
          "description": "Error in adding guiAdmin to CContainer"
        },
        "161": {
          "description": "Error adding object to guiAdmin"
        },
        "162": {
          "description": "Error adding guiAdmin to CContainer"
        },
        "310": {
          "description": "Different number of file objects to compare"
        },
        "311": {
          "description": "Different number of XData objects to compare"
        },
        "312": {
          "description": "Different number of key-value pairs to compare"
        },
        "313": {
          "description": "Different values of key-value pair"
        },
        "314": {
          "description": "Error running comparison of object"
        }
      }
    },
    "CContainer": {
      "module": "ccp4x.data_scan.CCP4Container",
      "class": "CContainer",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Container.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CContainer",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Error parsing XML"
        },
        "102": {
          "description": "Missing information"
        },
        "103": {
          "description": "Unknown data class"
        },
        "104": {
          "description": "Error creating data object"
        },
        "105": {
          "description": "Error setting data object qualifiers"
        },
        "106": {
          "description": "Error loading container definition"
        },
        "107": {
          "description": "XML file does not have correct function defined in the header"
        },
        "108": {
          "description": "XML undefined error interpreting sub-container"
        },
        "109": {
          "description": "Error attempting to access unknown attribute",
          "severity": 2
        },
        "110": {
          "description": "Error creating sub-container"
        },
        "111": {
          "description": "XML file does not have expected pluginName defined in the header"
        },
        "113": {
          "description": "Attempting to add object that is not a CData"
        },
        "114": {
          "description": "Attempting to add object without valid name"
        },
        "115": {
          "description": "Attempting to add object with name that is already in container"
        },
        "116": {
          "description": "Error while attempting to add object"
        },
        "117": {
          "description": "Attempting to delete object with unrecognised name"
        },
        "118": {
          "description": "Error while attempting to delete object"
        },
        "119": {
          "description": "Error while attempting to set this container as object parent"
        },
        "120": {
          "description": "Attempting to add object of unrecognised class to container contents"
        },
        "121": {
          "description": "Error while attempting to add to container contents"
        },
        "122": {
          "description": "Error while attempting to make object from new content in container"
        },
        "123": {
          "description": "Unknown error while reading container header"
        },
        "124": {
          "description": "Definition of sub-content for data of class that does not require sub-content"
        },
        "125": {
          "description": "Unknown error while reading container content"
        },
        "126": {
          "description": "No id for sub-container in XML file"
        },
        "127": {
          "description": "Attempting to load container data from file that does not exist"
        },
        "128": {
          "description": "Unknown error creating XML for sub-container"
        },
        "129": {
          "description": "Error retieving data object for XML"
        },
        "130": {
          "description": "Error saving data object to XML"
        },
        "131": {
          "description": "Unknown error writing container contents to XML file"
        },
        "132": {
          "description": "Error changing object name - no name given"
        },
        "133": {
          "description": "Error changing object name - object with new name already exists"
        },
        "134": {
          "description": "Error changing object name - no object with old name"
        },
        "135": {
          "description": "Unknown error changing object name"
        },
        "136": {
          "description": "Error inserting object in container data order"
        },
        "137": {
          "description": "Unknown error restoring data from database"
        },
        "138": {
          "description": "Attempting to copy from otherContainer which is not a CContainer"
        },
        "139": {
          "severity": 2,
          "description": "Attempting to copy data which is not in this container"
        },
        "140": {
          "severity": 2,
          "description": "Attempting to copy data which is not in the other container"
        },
        "141": {
          "severity": 2,
          "description": "Unknown error copying data"
        },
        "142": {
          "description": "Unrecognised class name in file"
        },
        "143": {
          "description": "Item in file does not have an id"
        },
        "144": {
          "description": "Item id in file is not unique"
        },
        "145": {
          "description": "Failed setting command line argument"
        },
        "146": {
          "description": "Insufficient arguments at end of command line"
        },
        "147": {
          "description": "Error handling XmlDataFile for file element in def xml"
        },
        "148": {
          "description": "XmlDataFile for file element in def xml: file not found"
        },
        "149": {
          "description": "XmlDataFile for file element in def xml: can not read xml"
        },
        "150": {
          "description": "loadDataFromXml could not find plugin def file"
        },
        "160": {
          "description": "Error in adding guiAdmin to CContainer"
        },
        "161": {
          "description": "Error adding object to guiAdmin"
        },
        "162": {
          "description": "Error adding guiAdmin to CContainer"
        },
        "310": {
          "description": "Different number of file objects to compare"
        },
        "311": {
          "description": "Different number of XData objects to compare"
        },
        "312": {
          "description": "Different number of key-value pairs to compare"
        },
        "313": {
          "description": "Different values of key-value pair"
        },
        "314": {
          "description": "Error running comparison of object"
        }
      }
    },
    "CAnnotation": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CAnnotation",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Annotation text with user id and time",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAnnotation",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "text": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefined": true,
            "charWidth": -1
          }
        },
        "time": {
          "class": "<class 'ccp4x.data_scan.CCP4Annotation.CTime'>",
          "qualifiers": {
            "allowUndefined": true,
            "default": null
          }
        },
        "author": {
          "class": "<class 'ccp4x.data_scan.CCP4Annotation.CUserId'>",
          "qualifiers": {
            "allowUndefined": true,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "label": "Annotation",
        "toolTip": "Enter your comments"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAnnotationList": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CAnnotationList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "A list of annotation",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CAnnotationList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Annotation.CAnnotation'>"
      }
    },
    "CAuthor": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CAuthor",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Placeholder for bibliographic author",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CAuthor",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "minLength": null,
        "maxLength": null,
        "enumerators": [],
        "menuText": [],
        "onlyEnumerators": false,
        "charWidth": -1,
        "allowedCharsCode": 0
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CBibReference": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CBibReference",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Bibliographic reference",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CBibReference",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "pmid": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "title": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "authorList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4Annotation.CAuthor'>"
          }
        },
        "source": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "url": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "selected": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        }
      },
      "CONTENTS_ORDER": [
        "pmid",
        "title",
        "authorList",
        "source",
        "url",
        "selected"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Failed to load Medline data"
        }
      }
    },
    "CBibReferenceGroup": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CBibReferenceGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Set of bibliographic references for a task",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CBibReferenceGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "taskName": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "version": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "title": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "references": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4Annotation.CBibReference'>"
          }
        }
      },
      "CONTENTS_ORDER": [
        "taskName",
        "version",
        "title",
        "references"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "100": {
          "description": "Failed attempting to load MedLine file - file not found"
        },
        "101": {
          "description": "Failed attempting to find references file"
        },
        "102": {
          "description": "Error copying file"
        }
      }
    },
    "CDateRange": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CDateRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "A date range - may be on a scale of years,months or days",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CDateRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "year": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "enumerators": []
          }
        },
        "month": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "default": "January"
          }
        },
        "day": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 1,
            "min": 1,
            "max": 31
          }
        },
        "yearRange": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 0,
            "min": 0,
            "max": 100
          }
        },
        "monthRange": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 0,
            "min": 0,
            "max": 12
          }
        },
        "dayRange": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 0,
            "min": 0,
            "max": 30
          }
        }
      },
      "CONTENTS_ORDER": [
        "year",
        "month",
        "day",
        "yearRange",
        "monthRange",
        "dayRange"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CFont": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CFont",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Simplified Qt font options",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CFont",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "family": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "default": "Helvetica"
          }
        },
        "style": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "default": 0,
            "enumerators": [
              0,
              1,
              2
            ],
            "menuText": [
              "normal",
              "italic",
              "oblique"
            ]
          }
        },
        "pointSize": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 1,
            "default": 12
          }
        },
        "weight": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "max": 99,
            "default": 50,
            "allowUndefined": false,
            "enumerators": [
              25,
              50,
              63,
              75,
              87
            ],
            "menuText": [
              "light",
              "normal",
              "demi-bold",
              "bold",
              "black"
            ]
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CHostName": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CHostName",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Computer name",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CHostName",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "label": "Machine name",
        "toolTip": "Hostname as mycomputer.myplace.ac.uk"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CHostname": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CHostname",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "Computer name",
      "base_classes": [
        "CHostName"
      ],
      "immediate_parent": "CHostName",
      "mro": [
        "CHostname",
        "CHostName",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "label": "Machine name",
        "toolTip": "Hostname as mycomputer.myplace.ac.uk"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CMetaDataTag": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CMetaDataTag",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "This class will extend list of enumerators if new value for string is entered",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMetaDataTag",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "tag": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "tag"
      ],
      "QUALIFIERS": {
        "enumeratorsFunction": null,
        "addEnumeratorFunction": null
      },
      "QUALIFIERS_ORDER": [
        "enumeratorsFunction",
        "addEnumeratorFunction"
      ],
      "QUALIFIERS_DEFINITION": {
        "enumeratorsFunction": {
          "type": "<class 'method'>",
          "definition": "Function returning list of enumerators"
        },
        "addEnumeratorFunction": {
          "type": "<class 'method'>",
          "definition": "Function to add to list of enumerators"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMetaDataTagList": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CMetaDataTagList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CMetaDataTagList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4Annotation.CMetaDataTag'>"
      }
    },
    "CServerGroup": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CServerGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CServerGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "name": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "mechanism": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "enumerators": [
              "ssh",
              "ssh_shared",
              "qsub_local",
              "qsub_remote",
              "slurm_remote",
              "custom"
            ],
            "menuText": [
              "ssh",
              "ssh with shared filesystem",
              "qsub queue",
              "qsub on another machine",
              "Slurm on another machine",
              "custom"
            ],
            "onlyEnumerators": true,
            "default": "ssh"
          }
        },
        "serverList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "qualifiers": {
            "minLength": 1
          },
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4Annotation.CHostname'>",
            "qualifiers": {
              "default": null,
              "allowUndefind": false
            }
          }
        },
        "userExtensible": {
          "class": "<class 'core.CCP4Data.CBoolean'>",
          "qualifiers": {
            "default": false
          }
        },
        "customCodeFile": {
          "class": "<class 'core.CCP4File.CDataFile'>",
          "qualifiers": {
            "allowUndefind": true,
            "fileExtensions": [
              "py"
            ]
          }
        },
        "queueOptionsFile": {
          "class": "<class 'core.CCP4File.CDataFile'>",
          "qualifiers": {
            "allowUndefind": true
          }
        },
        "ccp4Dir": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefind": true
          }
        },
        "tempDir": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefind": true
          }
        },
        "sge_root": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefind": true
          }
        },
        "keyFilename": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefind": true
          }
        },
        "validate": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "default": "password",
            "enumerators": [
              "password",
              "key_filename",
              "pass_key_filename"
            ]
          }
        },
        "timeout": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "maxTries": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 2
          }
        }
      },
      "CONTENTS_ORDER": [
        "name",
        "mechanism",
        "serverList",
        "userExtensible",
        "ccp4Dir",
        "tempDir",
        "sge_root",
        "keyFilename",
        "validate",
        "customCodeFile",
        "queueOptionsFile"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CTime": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CTime",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "The time. Uses Python time module",
      "base_classes": [
        "CInt"
      ],
      "immediate_parent": "CInt",
      "mro": [
        "CTime",
        "CInt",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "min": 0,
        "label": "Time",
        "toolTip": "Time and date as hh:mm dd/mm/yyyy",
        "format": "%H:%M %d/%b/%y"
      },
      "QUALIFIERS_ORDER": [
        "format"
      ],
      "QUALIFIERS_DEFINITION": {
        "format": {
          "type": "<class 'str'>",
          "description": "Argument to Python time.strftime to display time in human readable format"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CUserAddress": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CUserAddress",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "User id and platform node",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CUserAddress",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "platformNode": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "userId": {
          "class": "<class 'ccp4x.data_scan.CCP4Annotation.CUserId'>"
        }
      },
      "CONTENTS_ORDER": [
        "platformNode",
        "userId"
      ],
      "QUALIFIERS": {
        "label": "User id and current machine",
        "toolTip": "User id as me@myplace.ac.uk and machine name"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CUserId": {
      "module": "ccp4x.data_scan.CCP4Annotation",
      "class": "CUserId",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4Annotation.py",
      "docstring": "A user ID",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CUserId",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "label": "User id",
        "toolTip": "User id as me@myplace.ac.uk"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {},
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CRefmacAnomalousAtom": {
      "module": "ccp4x.data_scan.CCP4RefmacData",
      "class": "CRefmacAnomalousAtom",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4RefmacData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CRefmacAnomalousAtom",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "atomType": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "charWidth": 5,
            "toolTip": "Element name as in PDB file"
          }
        },
        "Fp": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "toolTip": "Form factor f' for element at given wavelength"
          }
        },
        "Fpp": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "toolTip": "Form factor f'' for element at given wavelength"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CRefmacRestraintsDataFile": {
      "module": "ccp4x.data_scan.CCP4RefmacData",
      "class": "CRefmacRestraintsDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4RefmacData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CRefmacRestraintsDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "restraints",
        "mimeTypeName": "application/refmac-external-restraints",
        "mimeTypeDescription": "Refmac external restraints",
        "guiLabel": "Additional restraints",
        "fileExtensions": [
          "txt"
        ],
        "fileContentClassName": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CRefmacRigidGroupItem": {
      "module": "ccp4x.data_scan.CCP4RefmacData",
      "class": "CRefmacRigidGroupItem",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4RefmacData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CRefmacRigidGroupItem",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "rigid_group_id": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "segmentList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4RefmacData.CRefmacRigidGroupSegment'>"
          },
          "qualifiers": {
            "listMinLength": 1
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CRefmacRigidGroupList": {
      "module": "ccp4x.data_scan.CCP4RefmacData",
      "class": "CRefmacRigidGroupList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4RefmacData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CRefmacRigidGroupList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4RefmacData.CRefmacRigidGroupItem'>"
      }
    },
    "CRefmacRigidGroupSegment": {
      "module": "ccp4x.data_scan.CCP4RefmacData",
      "class": "CRefmacRigidGroupSegment",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4RefmacData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CRefmacRigidGroupSegment",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "chain_id": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "charWidth": 1,
            "allowUndefined": false,
            "mustExist": true
          }
        },
        "residue_1": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "mustExist": true,
            "allowUndefined": false
          }
        },
        "residue_2": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "mustExist": true,
            "allowUndefined": false
          }
        }
      },
      "CONTENTS_ORDER": [
        "chain_id",
        "residue_1",
        "residue_2"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "No sequence identity or structure RMS to target set"
        }
      }
    },
    "CDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "mustExist": false,
        "fromPreviousJob": false,
        "jobCombo": true,
        "mimeTypeName": "",
        "mimeTypeDescription": "",
        "fileLabel": null,
        "fileExtensions": [],
        "fileContentClassName": null,
        "isDirectory": false,
        "saveToDb": true,
        "requiredSubType": null,
        "requiredContentFlag": null
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CDataFileContent": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CDataFileContent",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CDataReflFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CDataReflFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "Reflection file from DIALS",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CDataReflFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Reflections from DIALS",
        "fileExtensions": [
          "refl"
        ]
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CEBIValidationXMLDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CEBIValidationXMLDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "An XLM file returned from the EBI validation server ",
      "base_classes": [
        "CXmlDataFile"
      ],
      "immediate_parent": "CXmlDataFile",
      "mro": [
        "CEBIValidationXMLDataFile",
        "CXmlDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/EBI-validation-xml",
        "fileExtensions": [
          "xml"
        ],
        "guiLabel": "EBI Validation XML"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "1001": {
          "description": "Unknown error reading XML file"
        },
        "1002": {
          "description": "Error trying to find root node in XML"
        },
        "1006": {
          "description": "Attempting to save XML file with incorrect body"
        },
        "1007": {
          "description": "Error creating XML text"
        },
        "1008": {
          "description": "Error saving XML text to file"
        },
        "1009": {
          "description": "Error reading XML file"
        },
        "1010": {
          "description": "XML file does not exist"
        },
        "1011": {
          "description": "No file name given for making I2XMlDataFile"
        },
        "1012": {
          "description": "Error creating I2XMlDataFile object"
        },
        "1013": {
          "description": "Error creating I2XMlDataFile file"
        }
      }
    },
    "CExePath": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CExePath",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CExePath",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "exeName": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "exePath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CDataFile'>",
          "qualifiers": {
            "mustExist": true,
            "allowUndefined": false
          }
        }
      },
      "CONTENTS_ORDER": [
        "exeName",
        "exePath"
      ],
      "QUALIFIERS": {},
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CExePathList": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CExePathList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CExePathList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4File.CExePath'>"
      }
    },
    "CExportedFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CExportedFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CExportedFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "exportId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CExportedFileList": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CExportedFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CExportedFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4File.CExportedFile'>"
      }
    },
    "CFileFunction": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CFileFunction",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "List of recognised XML file functions",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CFileFunction",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "enumerators": [
          "DEF",
          "PARAMS",
          "LOG",
          "PROJECTDIRECTORIES",
          "COM",
          "REFMAC",
          "OUTPUT",
          "STATUS",
          "PROJECTDATABASE",
          "MGSCENE",
          "JOBSERVERSTATUS",
          "WORKFLOW",
          "COMFILEPATCH",
          "CUSTOMTASK",
          "IMPORTEDJOB",
          "I1SUPPLEMENT",
          "ASUCONTENT",
          "UNKNOWN"
        ],
        "onlyEnumerators": true
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "enumerators": {
          "type": "<class 'list'>"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "editable": false
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CFilePath": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CFilePath",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A file path",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CFilePath",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "allowedCharacters": "",
        "allowedCharactersMode": 1,
        "default": null
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "allowedCharacters",
        "allowedCharactersMode",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if allow undefined value at run time"
        },
        "allowedCharacters": {
          "type": "<class 'str'>",
          "description": "Set of characters allowed in file name"
        },
        "allowedCharactersMode": {
          "type": "<class 'int'>",
          "description": "Handling of violation of allowed characters"
        },
        "default": {
          "type": "<class 'str'>",
          "description": "Default file path"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Invalid characters in file name"
        },
        "102": {
          "severity": 2,
          "description": "Invalid characters in file name"
        }
      }
    },
    "CI2XmlDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CI2XmlDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A reference to an XML file with CCP4i2 Header",
      "base_classes": [
        "CXmlDataFile"
      ],
      "immediate_parent": "CXmlDataFile",
      "mro": [
        "CI2XmlDataFile",
        "CXmlDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "header": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CI2XmlHeader'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileExtensions": [
          "xml"
        ],
        "autoLoadHeader": true
      },
      "QUALIFIERS_ORDER": [
        "autoLoadHeader"
      ],
      "QUALIFIERS_DEFINITION": {
        "autoLoadHeader": {
          "type": "<class 'bool'>"
        }
      },
      "ERROR_CODES": {
        "1003": {
          "description": "XML does not have <ccp4i2> root node"
        },
        "1004": {
          "severity": 2,
          "description": "XML does not have <ccp4i2_header> section"
        },
        "1005": {
          "description": "XML does not have <ccp4i2_body> section"
        }
      }
    },
    "CI2XmlHeader": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CI2XmlHeader",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "Container for header info from XML file",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CI2XmlHeader",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "function": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFileFunction'>"
        },
        "userId": {
          "class": "<class 'core.CCP4Annotation.CUserId'>"
        },
        "hostName": {
          "class": "<class 'core.CCP4Annotation.CHostName'>"
        },
        "creationTime": {
          "class": "<class 'core.CCP4Annotation.CTime'>"
        },
        "ccp4iVersion": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CVersion'>"
        },
        "pluginName": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "pluginVersion": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CVersion'>"
        },
        "pluginTitle": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "projectName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectName'>"
        },
        "projectId": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>",
          "qualifiers": {
            "allowUnfound": true
          }
        },
        "jobId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "jobNumber": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "comment": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "OS": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Attempting to read header from non-existant Xml file"
        },
        "102": {
          "description": "Error loading file to read header"
        },
        "103": {
          "description": "Error finding <ccp4i2_header> in file"
        },
        "104": {
          "description": "Error interpreting header from file"
        },
        "105": {
          "description": "File does not have <ccp4i2> root node"
        }
      }
    },
    "CMmcifData": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CMmcifData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "Generic mmCIF data.\nThis is intended to be a base class for other classes\nspecific to coordinates, reflections or geometry data.",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CMmcifData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMmcifDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CMmcifDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A generic mmCIF format file.\nThis is intended to be a base class for other classes\nspecific to coordinates, reflections or geometry data.",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CMmcifDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileExtensions": [
          "cif",
          "ent"
        ]
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CPDFDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CPDFDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "An PDF format file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CPDFDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/x-pdf",
        "fileExtensions": [
          "pdf"
        ],
        "guiLabel": "PDF file"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CPostscriptDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CPostscriptDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A postscript format file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CPostscriptDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/postscript",
        "fileExtensions": [
          "ps"
        ],
        "guiLabel": "Postscript file"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CProjectId": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CProjectId",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "The CCP4i2 database project id - a global unique id",
      "base_classes": [
        "CUUID"
      ],
      "immediate_parent": "CUUID",
      "mro": [
        "CProjectId",
        "CUUID",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "allowUnfound": true,
        "default": null
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "allowUnfound",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if allow undefined value at run time"
        },
        "allowUnfound": {
          "type": "<class 'bool'>",
          "description": "Flag if allow unfound project at run time"
        },
        "default": {
          "type": "<class 'str'>"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Unrecognised projectId"
        },
        "202": {
          "description": "Project does not have directory set"
        },
        "203": {
          "description": "Project directory does not exist"
        },
        "205": {
          "severity": 2,
          "description": "Warning - Project does not have directory set"
        },
        "206": {
          "severity": 2,
          "description": "Warning - Project directory does not exist"
        }
      }
    },
    "CProjectName": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CProjectName",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "The name of a CCP4i project or directory alias",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CProjectName",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "allowAlias": true,
        "allowUnfound": true,
        "default": null
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "allowAlias",
        "allowUnfound",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if allow undefined value at run time"
        },
        "allowAlias": {
          "type": "<class 'bool'>",
          "description": "Flag if allow project to be directory alias at run time"
        },
        "allowUnfound": {
          "type": "<class 'bool'>",
          "description": "Flag if allow unfound project at run time"
        },
        "default": {
          "type": "<class 'str'>"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Invalid project name"
        },
        "102": {
          "description": "Project does not have directory set"
        },
        "103": {
          "description": "Project directory does not exist"
        },
        "104": {
          "severity": 2,
          "description": "Warning - Project name is a directory alias"
        },
        "105": {
          "severity": 2,
          "description": "Warning - Project does not have directory set"
        },
        "106": {
          "severity": 2,
          "description": "Warning - Project directory does not exist"
        }
      }
    },
    "CSceneDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CSceneDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "An xml format file for defining scene in CCP4mg.",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CSceneDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "scene",
        "mimeTypeName": "application/CCP4-scene",
        "mimeTypeDescription": "CCP4mg scene file",
        "guiLabel": "CCP4mg scene",
        "fileExtensions": [
          "scene.xml"
        ],
        "fileContentClassName": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CSearchPath": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CSearchPath",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CSearchPath",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "name": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "path": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CDataFile'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CSearchPathList": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CSearchPathList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CSearchPathList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4File.CSearchPath'>"
      }
    },
    "CTextDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CTextDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A text data file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CTextDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "\"text/plain\"",
        "mimeTypeDescription": "Standard plain text",
        "fileLabel": null,
        "fileExtensions": [
          "txt",
          "log"
        ]
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CVersion": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CVersion",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A (string) version number of the form n.m.i",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CVersion",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": null,
        "charWidth": 10
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "charWidth"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if allow an unset value at run time"
        },
        "default": {
          "description": "A default value"
        },
        "charWidth": {
          "type": "<class 'int'>",
          "description": "Number of characters allowed for widget in GUI"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Version is not of form n.m or n.m.i"
        }
      }
    },
    "CXmgrDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CXmgrDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "An xmgr format file. This is the input format for xmgrace, as output by scala or aimless",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CXmgrDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/grace",
        "fileExtensions": [
          "xmgr"
        ]
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CXmlDataFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CXmlDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A reference to an XML file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CXmlDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileExtensions": [
          "xml"
        ],
        "saveToDb": false,
        "mimeTypeName": "application/xml"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "1001": {
          "description": "Unknown error reading XML file"
        },
        "1002": {
          "description": "Error trying to find root node in XML"
        },
        "1006": {
          "description": "Attempting to save XML file with incorrect body"
        },
        "1007": {
          "description": "Error creating XML text"
        },
        "1008": {
          "description": "Error saving XML text to file"
        },
        "1009": {
          "description": "Error reading XML file"
        },
        "1010": {
          "description": "XML file does not exist"
        },
        "1011": {
          "description": "No file name given for making I2XMlDataFile"
        },
        "1012": {
          "description": "Error creating I2XMlDataFile object"
        },
        "1013": {
          "description": "Error creating I2XMlDataFile file"
        }
      }
    },
    "CYmlFile": {
      "module": "ccp4x.data_scan.CCP4File",
      "class": "CYmlFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4File.py",
      "docstring": "A yml data file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CYmlFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'ccp4x.data_scan.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "\"text/plain\"",
        "mimeTypeDescription": "Standard plain text",
        "guiLabel": "yml file",
        "fileExtensions": [
          "yml"
        ]
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CAltSpaceGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAltSpaceGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A string holding the space group",
      "base_classes": [
        "CSpaceGroup"
      ],
      "immediate_parent": "CSpaceGroup",
      "mro": [
        "CAltSpaceGroup",
        "CSpaceGroup",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "toolTip": "Hermann-Mauguin space group name",
        "helpFile": "crystal_data#space_group"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Invalid space group"
        },
        "102": {
          "description": "Space group is not chiral",
          "severity": 2
        },
        "103": {
          "description": "Space group is not Hermann-Mauguin standard"
        },
        "104": {
          "description": "Space group is not a chiral Hermann-Mauguin standard. Full syminfo.lib information not loaded."
        },
        "105": {
          "description": "Space group is not Hermann-Mauguin standard - has wrong number of spaces?"
        },
        "106": {
          "description": "Space group is undefined",
          "severity": 1
        },
        "107": {
          "description": "Space group is undefined"
        },
        "108": {
          "description": "Space group is incomplete",
          "severity": 2
        }
      }
    },
    "CAltSpaceGroupList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAltSpaceGroupList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CAltSpaceGroupList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CAltSpaceGroup'>"
      }
    },
    "CAnomalousColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAnomalousColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Selection of F/I and AnomF/I columns from MTZ.\nExpected to be part of ab initio phasing dataset ( CDataset)",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CAnomalousColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "toolTipList": [
          "The real part of the experimental structure factors",
          "The anomalous part of the experimental structure factors"
        ]
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CAnomalousIntensityColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAnomalousIntensityColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Selection of I and AnomI columns from MTZ.\nExpected to be part of ab initio phasing dataset ( CDataset)",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CAnomalousIntensityColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "toolTipList": [
          "The real part of the experimental intensity",
          "The anomalous part of the experimental intensity"
        ],
        "guiLabel": "Intensity and anomalous intensity"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CAnomalousScatteringElement": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAnomalousScatteringElement",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Definition of a anomalous scattering element",
      "base_classes": [
        "CElement"
      ],
      "immediate_parent": "CElement",
      "mro": [
        "CAnomalousScatteringElement",
        "CElement",
        "COneWord",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "onlyEnumerators": false,
        "enumerators": [
          "Br",
          "Fe",
          "Pt",
          "Se"
        ],
        "charWidth": 4,
        "default": "Se"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Word contains white space item"
        }
      }
    },
    "CAsuComponent": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAsuComponent",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A component of the asymmetric unit. This is for use in MR, defining\nwhat we are searching for. ",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CAsuComponent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "moleculeType": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "PROTEIN",
              "NUCLEIC"
            ],
            "menuText": [
              "protein",
              "nucleic acid"
            ],
            "default": "PROTEIN",
            "toolTip": "Molecule type"
          }
        },
        "seqFile": {
          "class": "<class 'core.CCP4ModelData.CSeqDataFile'>",
          "qualifiers": {
            "jobCombo": false,
            "mustExist": true,
            "allowUndefined": false
          }
        },
        "numberOfCopies": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": false,
            "toolTip": "Number of copies of sequence",
            "min": 0,
            "max": 999,
            "default": 1,
            "enumerators": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12
            ]
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CAsuComponentList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CAsuComponentList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CAsuComponentList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1,
        "guiLabel": "Contents of asymmetric unit"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CAsuComponent'>"
      }
    },
    "CCell": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CCell",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A unit cell",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CCell",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "a": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellLength'>",
          "qualifiers": {
            "toolTip": "Cell length a in A",
            "guiLabel": "a"
          }
        },
        "b": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellLength'>",
          "qualifiers": {
            "toolTip": "Cell length b in A",
            "guiLabel": "b"
          }
        },
        "c": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellLength'>",
          "qualifiers": {
            "toolTip": "Cell length c in A",
            "guiLabel": "c"
          }
        },
        "alpha": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellAngle'>",
          "qualifiers": {
            "toolTip": "Cell angle alpha in degrees",
            "guiLabel": "alpha"
          }
        },
        "beta": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellAngle'>",
          "qualifiers": {
            "toolTip": "Cell angle beta in degrees",
            "guiLabel": "beta"
          }
        },
        "gamma": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCellAngle'>",
          "qualifiers": {
            "toolTip": "Cell angle gamma in degrees",
            "guiLabel": "gamma"
          }
        }
      },
      "CONTENTS_ORDER": [
        "a",
        "b",
        "c",
        "alpha",
        "beta",
        "gamma"
      ],
      "QUALIFIERS": {
        "toolTip": "Cell lengths and angles",
        "helpFile": "crystal_data#cell"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CCellAngle": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CCellAngle",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A cell angle",
      "base_classes": [
        "CFloat"
      ],
      "immediate_parent": "CFloat",
      "mro": [
        "CCellAngle",
        "CFloat",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "min": 0.0,
        "max": 180.0,
        "default": null,
        "allowUndefined": true,
        "toolTip": "Cell angle in degrees"
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'float'>"
        },
        "max": {
          "description": "The inclusive maximum value"
        },
        "min": {
          "description": "The inclusive minimum value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CCellLength": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CCellLength",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A cell length",
      "base_classes": [
        "CFloat"
      ],
      "immediate_parent": "CFloat",
      "mro": [
        "CCellLength",
        "CFloat",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "min": 0.0,
        "default": null,
        "allowUndefined": false,
        "toolTip": "Cell length in A"
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'float'>"
        },
        "max": {
          "description": "The inclusive maximum value"
        },
        "min": {
          "description": "The inclusive minimum value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Groups of columns in MTZ - probably from analysis by hklfile",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "columnGroupType": {
          "class": "<class 'core.CCP4Data.COneWord'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "Obs",
              "Phs",
              "MapCoeffs",
              "FreeR"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "dataset": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "columnList": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumn'>"
          }
        },
        "selected": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CColumnGroupItem": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CColumnGroupItem",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Definition of set of columns that form a 'group'",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CColumnGroupItem",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "columnName": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "defaultList": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "columnType": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CColumnTypeList'>"
        },
        "partnerTo": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "partnerOffset": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "1": {
          "description": "Attempting to change immutable object"
        },
        "2": {
          "description": "Attempting to access unknown attribute"
        }
      }
    },
    "CColumnGroupList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CColumnGroupList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CColumnGroupList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CColumnGroup'>"
      }
    },
    "CColumnType": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CColumnType",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list of recognised MTZ column types",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CColumnType",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "enumerators": [
          "H",
          "J",
          "F",
          "D",
          "Q",
          "G",
          "L",
          "K",
          "M",
          "E",
          "P",
          "W",
          "A",
          "B",
          "Y",
          "I",
          "R"
        ],
        "onlyEnumerators": true,
        "default": "F"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CColumnTypeList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CColumnTypeList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list of acceptable MTZ column types",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CColumnTypeList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CColumnType'>"
      }
    },
    "CCrystalName": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CCrystalName",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CCrystalName",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": false,
        "minLength": 1,
        "allowedChars": 1,
        "toolTip": "Unique identifier for crystal (one word)"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CDataset": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CDataset",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "The experimental data model for ab initio phasing",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CDataset",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "selected": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "obsDataFile": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CObsDataFile'>"
        },
        "crystalName": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCrystalName'>"
        },
        "datasetName": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CDatasetName'>"
        },
        "formFactors": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CFormFactor'>"
        },
        "formFactorSource": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "no",
              "composition",
              "xia2"
            ],
            "menuText": [
              "user input",
              "atomic composition",
              "from XIA2"
            ],
            "default": "no"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CDatasetList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CDatasetList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CDatasetList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CDataset'>"
      }
    },
    "CDatasetName": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CDatasetName",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CDatasetName",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": false,
        "allowedChars": 1,
        "minLength": 1,
        "toolTip": "Unique identifier for dataset (one word)"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CDialsJsonFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CDialsJsonFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CDialsJsonFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/dials-jfile",
        "mimeTypeDescription": "Dials json data file",
        "fileExtensions": [
          "json",
          "expt",
          "jsn"
        ],
        "fileContentClassName": null,
        "fileLabel": "dials_jdata",
        "guiLabel": "json data",
        "toolTip": "json data files"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CDialsPickleFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CDialsPickleFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CDialsPickleFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/dials-pfile",
        "mimeTypeDescription": "Dials pickle data file",
        "fileExtensions": [
          "pickle",
          "refl"
        ],
        "fileContentClassName": null,
        "fileLabel": "dials_pdata",
        "guiLabel": "Xia2/Dials pickle data",
        "toolTip": "Xia2/Dials pickle data files"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CExperimentalDataType": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CExperimentalDataType",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Experimental data type e.g. native or peak",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CExperimentalDataType",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "onlyEnumerators": true,
        "enumerators": [
          "native",
          "derivative",
          "SAD",
          "peak",
          "inflection",
          "high_remote",
          "low_remote",
          ""
        ],
        "default": "SAD"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CFPairColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CFPairColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CFPairColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Anomalous structure factors and sigma"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CFSigFColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CFSigFColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CFSigFColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Structure factor and sigma"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CFormFactor": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CFormFactor",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "The for factor (Fp and Fpp) for a giving element and wavelength",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CFormFactor",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "Fp": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "toolTip": "Form factor F' for element at given wavelength"
          }
        },
        "Fpp": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "toolTip": "Form factor F'' for element at given wavelength"
          }
        }
      },
      "CONTENTS_ORDER": [
        "Fp",
        "Fpp"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CFreeRColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CFreeRColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CFreeRColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Set of FreeR flags"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CFreeRDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CFreeRDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMiniMtzDataFile"
      ],
      "immediate_parent": "CMiniMtzDataFile",
      "mro": [
        "CFreeRDataFile",
        "CMiniMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "enumerators": [],
            "onlyEnumerators": true
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-freerflag",
        "mimeTypeDescription": "FreeR flag",
        "fileExtensions": [
          "mtz",
          "cif",
          "ent"
        ],
        "fileContentClassName": "CMtzData",
        "fileLabel": "freeRflag",
        "guiLabel": "Free R set",
        "toolTip": "Set of reflections used for FreeR calculation",
        "correctColumns": [
          "I"
        ],
        "columnGroupClassList": [
          "<class 'ccp4x.data_scan.CCP4XtalData.CFreeRColumnGroup'>"
        ],
        "helpFile": "data_files#FreeR"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag",
        "correctColumns",
        "columnGroupClassList",
        "sameCrystalAs"
      ],
      "QUALIFIERS_DEFINITION": {
        "correctColumns": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of coloumn data types expected in the file"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Wrong number of columns"
        },
        "202": {
          "description": "Wrong column types"
        },
        "203": {
          "description": "No correct column types found in file"
        },
        "204": {
          "description": "Duplicate or additional column types found in file"
        },
        "205": {
          "description": "Columns in file have non-standard labels"
        },
        "206": {
          "description": "File contains unmerged data"
        },
        "210": {
          "description": "Failed creating mini-MTZ"
        },
        "211": {
          "description": "Insufficient columns selected from imported MTZ"
        },
        "212": {
          "description": "Data already imported as",
          "severity": 2
        },
        "220": {
          "description": "Can not convert file content, file does not exist"
        },
        "221": {
          "description": "Can not convert file content, existing content insufficiently rich"
        },
        "222": {
          "description": "Can not convert file content, bad input for target content"
        },
        "223": {
          "description": "Can not recognise file content"
        },
        "224": {
          "description": "Not possible to convert to required content - no mechanism implemented"
        },
        "225": {
          "description": "Failed importing from an mmcif file - failed running cif2mtz"
        },
        "226": {
          "description": "Failed importing from an mmcif file - no output from cif2mtz"
        }
      }
    },
    "CGenericReflDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CGenericReflDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CGenericReflDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Reflection data",
        "mimeTypeName": "application/CCP4-generic-reflections",
        "toolTip": "A reflection data file in MTZ or a non-CCP4 format",
        "fileContentClassName": "CUnmergedDataContent",
        "fileExtensions": [
          "mtz",
          "hkl",
          "HKL",
          "sca",
          "SCA",
          "mmcif",
          "cif",
          "ent"
        ],
        "downloadModes": [
          "ebiSFs"
        ],
        "helpFile": "import_merged#file_formats"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CHLColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CHLColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CHLColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Hendrickson-Lattmann coefficients"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CIPairColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CIPairColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CIPairColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Anomalous intensities and sigma"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CISigIColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CISigIColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CISigIColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Intensity and sigma"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CImageFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CImageFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CImageFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-image",
        "mimeTypeDescription": "Image file",
        "fileExtensions": [
          "img",
          "cbf",
          "mccd",
          "mar1600",
          "h5",
          "nxs"
        ],
        "fileContentClassName": null,
        "guiLabel": "Image file",
        "toolTip": "First image file in a directory"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CImageFileList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CImageFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CImageFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CImageFile'>"
      }
    },
    "CImosflmXmlDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CImosflmXmlDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An iMosflm data file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CImosflmXmlDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "fileLabel": "imosflm",
        "mimeTypeName": "application/iMosflm-xml",
        "mimeTypeDescription": "iMosflm data",
        "guiLabel": "iMosflm data",
        "fileExtensions": [
          "imosflm.xml"
        ],
        "fileContentClassName": null
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CImportUnmerged": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CImportUnmerged",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CImportUnmerged",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "file": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CUnmergedDataFile'>",
          "qualifiers": {
            "allowUndefined": false,
            "mustExist": true,
            "fromPreviousJob": true
          }
        },
        "cell": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>"
        },
        "wavelength": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CWavelength'>"
        },
        "crystalName": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefined": false,
            "minLength": 1,
            "guiLabel": "crystal name",
            "allowedCharsCode": 1
          }
        },
        "dataset": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "allowUndefined": false,
            "minLength": 1,
            "guiLabel": "dataset name",
            "allowedCharsCode": 1
          }
        },
        "excludeSelection": {
          "class": "<class 'core.CCP4Data.CRangeSelection'>",
          "qualifiers": {
            "allowUndefined": true
          }
        }
      },
      "CONTENTS_ORDER": [
        "file",
        "crystalName",
        "dataset",
        "excludeSelection"
      ],
      "QUALIFIERS": {
        "toolTip": "Imported data file, cell parameters and crystal/dataset identifiers",
        "helpFile": "import_merged#file_formats"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CImportUnmergedList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CImportUnmergedList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CImportUnmergedList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CImportUnmerged'>"
      }
    },
    "CMapCoeffsDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMapCoeffsDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMiniMtzDataFile"
      ],
      "immediate_parent": "CMiniMtzDataFile",
      "mro": [
        "CMapCoeffsDataFile",
        "CMiniMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 1,
            "enumerators": [
              1,
              2,
              3
            ],
            "onlyEnumerators": true,
            "menuText": [
              "normal map",
              "difference map",
              "anomalous difference map"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-map",
        "mimeTypeDescription": "MTZ F-phi",
        "fileExtensions": [
          "mtz",
          "cif",
          "ent"
        ],
        "fileContentClassName": "CMtzData",
        "fileLabel": "map_coefficients",
        "guiLabel": "Map coefficients",
        "toolTip": "Electron density map coefficients: F,Phi",
        "correctColumns": [
          "FP",
          "FQP"
        ],
        "columnGroupClassList": [
          "<class 'ccp4x.data_scan.CCP4XtalData.CMapColumnGroup'>"
        ],
        "downloadModes": [
          "Uppsala-EDS"
        ],
        "helpFile": "data_files#MapCoeffs"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag",
        "correctColumns",
        "columnGroupClassList",
        "sameCrystalAs"
      ],
      "QUALIFIERS_DEFINITION": {
        "correctColumns": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of coloumn data types expected in the file"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Wrong number of columns"
        },
        "202": {
          "description": "Wrong column types"
        },
        "203": {
          "description": "No correct column types found in file"
        },
        "204": {
          "description": "Duplicate or additional column types found in file"
        },
        "205": {
          "description": "Columns in file have non-standard labels"
        },
        "206": {
          "description": "File contains unmerged data"
        },
        "210": {
          "description": "Failed creating mini-MTZ"
        },
        "211": {
          "description": "Insufficient columns selected from imported MTZ"
        },
        "212": {
          "description": "Data already imported as",
          "severity": 2
        },
        "220": {
          "description": "Can not convert file content, file does not exist"
        },
        "221": {
          "description": "Can not convert file content, existing content insufficiently rich"
        },
        "222": {
          "description": "Can not convert file content, bad input for target content"
        },
        "223": {
          "description": "Can not recognise file content"
        },
        "224": {
          "description": "Not possible to convert to required content - no mechanism implemented"
        },
        "225": {
          "description": "Failed importing from an mmcif file - failed running cif2mtz"
        },
        "226": {
          "description": "Failed importing from an mmcif file - no output from cif2mtz"
        }
      }
    },
    "CMapColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMapColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CMapColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Structure factor and phase to define a map"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CMapDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMapDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A CCP4 Map file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CMapDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-map",
        "mimeTypeDescription": "Map",
        "fileExtensions": [
          "map",
          "mrc"
        ],
        "fileContentClassName": null,
        "guiLabel": "Map",
        "toolTip": "A map in CCP4/MRC format",
        "helpFile": "data_files#map_files"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CMergeMiniMtz": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMergeMiniMtz",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMergeMiniMtz",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "fileName": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMiniMtzDataFile'>",
          "qualifiers": {
            "fromPreviousJob": false
          }
        },
        "columnTag": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "columnNames": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [
        "fileName",
        "columnTag",
        "columnNames"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Selected file is not a suitable 'mini' MTZ containing experimental data object"
        },
        "202": {
          "description": "Output column name list does not have correct number of names"
        }
      }
    },
    "CMergeMiniMtzList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMergeMiniMtzList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CMergeMiniMtzList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 2,
        "saveToDb": true
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMergeMiniMtz'>"
      }
    },
    "CMiniMtzDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMiniMtzDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMtzDataFile"
      ],
      "immediate_parent": "CMtzDataFile",
      "mro": [
        "CMiniMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-mini",
        "fileExtensions": [
          "mtz",
          "cif",
          "ent"
        ],
        "fileContentClassName": "CMtzData",
        "saveToDb": true,
        "correctColumns": [
          "FQ",
          "JQ",
          "GLGL",
          "KMKM",
          "AAAA",
          "PW",
          "FP",
          "I"
        ],
        "columnGroupClassList": "NotImplemented",
        "toolTip": "Mini-MTZ file containing reflection,phases,FreeR set or map coefficients",
        "helpFile": "data_files#MTZ"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag",
        "correctColumns",
        "columnGroupClassList",
        "sameCrystalAs"
      ],
      "QUALIFIERS_DEFINITION": {
        "correctColumns": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of coloumn data types expected in the file"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Wrong number of columns"
        },
        "202": {
          "description": "Wrong column types"
        },
        "203": {
          "description": "No correct column types found in file"
        },
        "204": {
          "description": "Duplicate or additional column types found in file"
        },
        "205": {
          "description": "Columns in file have non-standard labels"
        },
        "206": {
          "description": "File contains unmerged data"
        },
        "210": {
          "description": "Failed creating mini-MTZ"
        },
        "211": {
          "description": "Insufficient columns selected from imported MTZ"
        },
        "212": {
          "description": "Data already imported as",
          "severity": 2
        },
        "220": {
          "description": "Can not convert file content, file does not exist"
        },
        "221": {
          "description": "Can not convert file content, existing content insufficiently rich"
        },
        "222": {
          "description": "Can not convert file content, bad input for target content"
        },
        "223": {
          "description": "Can not recognise file content"
        },
        "224": {
          "description": "Not possible to convert to required content - no mechanism implemented"
        },
        "225": {
          "description": "Failed importing from an mmcif file - failed running cif2mtz"
        },
        "226": {
          "description": "Failed importing from an mmcif file - no output from cif2mtz"
        }
      }
    },
    "CMiniMtzDataFileList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMiniMtzDataFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CMiniMtzDataFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMiniMtzDataFile'>"
      }
    },
    "CMmcifReflData": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMmcifReflData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Generic mmCIF data.\nThis is intended to be a base class for other classes\nspecific to coordinates, reflections or geometry data.",
      "base_classes": [
        "CMmcifData"
      ],
      "immediate_parent": "CMmcifData",
      "mro": [
        "CMmcifReflData",
        "CMmcifData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "cell": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>"
        },
        "spaceGroup": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CSpaceGroup'>"
        },
        "wavelength": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CWavelength'>"
        },
        "haveFreeRColumn": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "haveFobsColumn": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "haveFpmObsColumn": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "haveIobsColumn": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "haveIpmObsColumn": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Attempting to load mmCIF data from non-existant/broken file"
        },
        "102": {
          "description": "Error reading interpreting line in cif file"
        }
      }
    },
    "CMmcifReflDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMmcifReflDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A reflection file in mmCIF format",
      "base_classes": [
        "CMmcifDataFile"
      ],
      "immediate_parent": "CMmcifDataFile",
      "mro": [
        "CMmcifReflDataFile",
        "CMmcifDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "mmCIF reflection data",
        "mimeTypeName": "chemical/x-cif",
        "toolTip": "A reflection file in mmCIF format",
        "fileContentClassName": "CMmcifReflData",
        "helpFile": "data_files#mmCIF"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CMtzColumn": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzColumn",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ column with column label and column type",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMtzColumn",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "columnLabel": {
          "class": "<class 'core.CCP4Data.COneWord'>",
          "qualifiers": {
            "allowUndefined": true
          }
        },
        "columnType": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CColumnType'>"
        },
        "dataset": {
          "class": "<class 'core.CCP4Data.COneWord'>"
        },
        "groupIndex": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMtzColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMtzColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "groupType": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumnGroupType'>"
        },
        "columns": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumn'>"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CMtzColumnGroupType": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzColumnGroupType",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list of recognised MTZ column types",
      "base_classes": [
        "CColumnType"
      ],
      "immediate_parent": "CColumnType",
      "mro": [
        "CMtzColumnGroupType",
        "CColumnType",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "enumerators": [
          "H",
          "J",
          "F",
          "D",
          "Q",
          "G",
          "L",
          "K",
          "M",
          "E",
          "P",
          "W",
          "A",
          "B",
          "Y",
          "I",
          "R"
        ],
        "onlyEnumerators": true,
        "default": "F"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CMtzData": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzData",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CMtzData",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "cell": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>"
        },
        "spaceGroup": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CSpaceGroup'>"
        },
        "resolutionRange": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CResolutionRange'>"
        },
        "listOfColumns": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumn'>"
          }
        },
        "datasets": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'core.CCP4Data.CString'>"
          }
        },
        "crystalNames": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'core.CCP4Data.CString'>"
          }
        },
        "wavelengths": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CWavelength'>"
          }
        },
        "datasetCells": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>"
          }
        },
        "merged": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Attempting to load MTZ data from non-existant/broken file"
        },
        "102": {
          "description": "Error creating command file for mtzdump"
        },
        "103": {
          "description": "No log file found from mtzdump"
        },
        "104": {
          "description": "Error reading log file from mtzdump"
        },
        "105": {
          "severity": 2,
          "description": "Different spacegroup"
        },
        "106": {
          "severity": 2,
          "description": "Different cell parameter"
        },
        "107": {
          "severity": 2,
          "description": "Different cell parameters"
        },
        "108": {
          "severity": 4,
          "description": "Different Laue group"
        },
        "109": {
          "severity": 4,
          "description": "Different point group"
        },
        "410": {
          "description": "Invalid CSeqDataFile passed to matthewCoeff"
        },
        "411": {
          "description": "Failed to run matthewCoeff"
        }
      }
    },
    "CMtzDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz",
        "mimeTypeDescription": "MTZ experimental data",
        "fileExtensions": [
          "mtz"
        ],
        "fileContentClassName": "CMtzData",
        "guiLabel": "Experimental data",
        "toolTip": "Experimental data in CCP4's MTZ format",
        "sameCrystalAs": "NotImplemented",
        "sameCrystalLevel": "NotImplemented",
        "helpFile": "data_files#MTZ"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "sameCrystalAs": {
          "type": "<class 'str'>",
          "description": "Name of CMtzDataFile object that crystal parameters should match - probably the observed data"
        },
        "sameCrystalLevel": {
          "type": "<class 'int'>",
          "description": "Rigour of same crystal test"
        }
      },
      "ERROR_CODES": {
        "151": {
          "description": "Failed converting MTZ file to alternative format"
        },
        "152": {
          "description": "Failed merging MTZ file - invalid input"
        },
        "153": {
          "description": "Failed merging MTZ files - error running cmtzjoin - see log"
        },
        "154": {
          "description": "Failed merging MTZ files - error running cad - see log"
        },
        "401": {
          "description": "MTZ file header data differs"
        },
        "402": {
          "description": "MTZ file columns differ"
        },
        "403": {
          "description": "Error trying to access number of reflections",
          "severity": 2
        },
        "404": {
          "description": "MTZ files have different number of reflections"
        },
        "405": {
          "description": "MTZ column mean value differs"
        },
        "406": {
          "description": "MTZ file header data differs - may be autogenerated names",
          "severity": 2
        },
        "407": {
          "description": "Error splitting MTZ file - failed creating input command to cmtzsplit"
        },
        "408": {
          "description": "Error splitting MTZ file - output file missing"
        }
      }
    },
    "CMtzDataset": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CMtzDataset",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CMtzDataset",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "name": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "columnGroups": {
          "class": "<class 'core.CCP4Data.CList'>",
          "subItem": {
            "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumnGroup'>"
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CObsDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CObsDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMiniMtzDataFile"
      ],
      "immediate_parent": "CMiniMtzDataFile",
      "mro": [
        "CObsDataFile",
        "CMiniMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 1,
            "enumerators": [
              1,
              2,
              3
            ],
            "onlyEnumerators": true,
            "menuText": [
              "observed data",
              "derived data",
              "reference data"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-observed",
        "mimeTypeDescription": "MTZ observed",
        "fileExtensions": [
          "mtz",
          "cif",
          "ent"
        ],
        "fileContentClassName": "CMtzData",
        "fileLabel": "observed_data",
        "guiLabel": "Reflections",
        "toolTip": "Observed structure factors or intensities",
        "correctColumns": [
          "KMKM",
          "GLGL",
          "JQ",
          "FQ"
        ],
        "columnGroupClassList": [
          "<class 'ccp4x.data_scan.CCP4XtalData.CIPairColumnGroup'>",
          "<class 'ccp4x.data_scan.CCP4XtalData.CFPairColumnGroup'>",
          "<class 'ccp4x.data_scan.CCP4XtalData.CISigIColumnGroup'>",
          "<class 'ccp4x.data_scan.CCP4XtalData.CFSigFColumnGroup'>"
        ],
        "downloadModes": [
          "ebiSFs"
        ],
        "helpFile": "data_files#Obs"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag",
        "correctColumns",
        "columnGroupClassList",
        "sameCrystalAs"
      ],
      "QUALIFIERS_DEFINITION": {
        "correctColumns": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of coloumn data types expected in the file"
        }
      },
      "ERROR_CODES": {
        "301": {
          "description": "Running ctruncate failed"
        },
        "302": {
          "description": "Running cmtzsplit to convert observed data type failed"
        },
        "303": {
          "description": "Running sftools failed"
        }
      }
    },
    "CPhaserRFileDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CPhaserRFileDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CPhaserRFileDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/phaser-rfile",
        "mimeTypeDescription": "Phaser rotation solution file",
        "fileExtensions": [
          "phaser_rlist.pkl"
        ],
        "fileContentClassName": null,
        "fileLabel": "phaser_rfile",
        "guiLabel": "Phaser rotation solution",
        "toolTip": "Phaser rfile solutions for rotation search"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CPhaserSolDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CPhaserSolDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CPhaserSolDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/phaser-sol",
        "mimeTypeDescription": "Phaser solution file",
        "fileExtensions": [
          "phaser_sol.pkl"
        ],
        "fileContentClassName": null,
        "fileLabel": "phaser_sol",
        "guiLabel": "Phaser solutions",
        "toolTip": "Possible solutions passed between runs of the Phaser program",
        "helpFile": "data_files#phasersol"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CPhiFomColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CPhiFomColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CProgramColumnGroup"
      ],
      "immediate_parent": "CProgramColumnGroup",
      "mro": [
        "CPhiFomColumnGroup",
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "guiLabel": "Phase and figure of merit"
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CPhsDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CPhsDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMiniMtzDataFile"
      ],
      "immediate_parent": "CMiniMtzDataFile",
      "mro": [
        "CPhsDataFile",
        "CMiniMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": 1,
            "enumerators": [
              1,
              2
            ],
            "onlyEnumerators": true,
            "menuText": [
              "unbiased data",
              "biased data"
            ]
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-phases",
        "mimeTypeDescription": "MTZ phases",
        "fileExtensions": [
          "mtz",
          "cif",
          "ent"
        ],
        "fileContentClassName": "CMtzData",
        "guiLabel": "Phases",
        "fileLabel": "phases",
        "toolTip": "Phases in Hendrickson-Lattmann or Phi/FOM form",
        "correctColumns": [
          "AAAA",
          "PW"
        ],
        "columnGroupClassList": [
          "<class 'ccp4x.data_scan.CCP4XtalData.CHLColumnGroup'>",
          "<class 'ccp4x.data_scan.CCP4XtalData.CPhiFomColumnGroup'>"
        ],
        "helpFile": "data_files#Phs"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag",
        "correctColumns",
        "columnGroupClassList",
        "sameCrystalAs"
      ],
      "QUALIFIERS_DEFINITION": {
        "correctColumns": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of coloumn data types expected in the file"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Wrong number of columns"
        },
        "202": {
          "description": "Wrong column types"
        },
        "203": {
          "description": "No correct column types found in file"
        },
        "204": {
          "description": "Duplicate or additional column types found in file"
        },
        "205": {
          "description": "Columns in file have non-standard labels"
        },
        "206": {
          "description": "File contains unmerged data"
        },
        "210": {
          "description": "Failed creating mini-MTZ"
        },
        "211": {
          "description": "Insufficient columns selected from imported MTZ"
        },
        "212": {
          "description": "Data already imported as",
          "severity": 2
        },
        "220": {
          "description": "Can not convert file content, file does not exist"
        },
        "221": {
          "description": "Can not convert file content, existing content insufficiently rich"
        },
        "222": {
          "description": "Can not convert file content, bad input for target content"
        },
        "223": {
          "description": "Can not recognise file content"
        },
        "224": {
          "description": "Not possible to convert to required content - no mechanism implemented"
        },
        "225": {
          "description": "Failed importing from an mmcif file - failed running cif2mtz"
        },
        "226": {
          "description": "Failed importing from an mmcif file - no output from cif2mtz"
        }
      }
    },
    "CProgramColumnGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CProgramColumnGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A group of MTZ columns required for program input",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CProgramColumnGroup",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mustExist": false,
        "mtzFileKey": "",
        "toolTipList": [],
        "default": []
      },
      "QUALIFIERS_ORDER": [
        "mtzFileKey",
        "mustExist",
        "toolTipList",
        "default"
      ],
      "QUALIFIERS_DEFINITION": {
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        },
        "toolTipList": {
          "type": "<class 'list'>",
          "description": "Tooltips for columns in group"
        },
        "default": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "Preferred values for column names"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "Error setting columnGroup qualifier"
        },
        "104": {
          "description": "Missing column selection"
        },
        "105": {
          "description": "Specified column not found in MTZ file"
        },
        "106": {
          "description": "Specified column has wrong type in MTZ file"
        },
        "107": {
          "description": "Error reading columnGroup qualifier from XML file"
        },
        "108": {
          "description": "No columnGroup qualifier"
        }
      }
    },
    "CProgramColumnGroup0": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CProgramColumnGroup0",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CProgramColumnGroup0",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "columnGroup": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CMtzColumnGroup'>"
        },
        "datasetName": {
          "class": "<class 'core.CCP4Data.CString'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mustExist": false,
        "mtzFileKey": "",
        "groupTypes": []
      },
      "QUALIFIERS_ORDER": [
        "groupTypes",
        "mtzFileKey",
        "mustExist"
      ],
      "QUALIFIERS_DEFINITION": {
        "groupTypes": {
          "type": "<class 'list'>",
          "description": "Type of columnGroup required by program"
        },
        "mtzFileKey": {
          "type": "<class 'str'>",
          "description": "The key for a CMtxDataFile in the same CContainer"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if the parameter must be set at run time"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Column not in MTZ file"
        },
        "102": {
          "description": "Column wrong type"
        },
        "103": {
          "description": "MTZ file is not defined",
          "severity": 2
        },
        "104": {
          "description": "No column group selected"
        },
        "105": {
          "description": "No column group selected",
          "severity": 2
        }
      }
    },
    "CRefmacKeywordFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CRefmacKeywordFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CRefmacKeywordFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/refmac-keywords",
        "mimeTypeDescription": "Refmac keyword file",
        "fileExtensions": [
          "txt"
        ],
        "fileContentClassName": null,
        "fileLabel": "refmac_keywords",
        "guiLabel": "Refmac keyword file",
        "toolTip": "A file containing keywords as they are meant to be read by refmac5"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CReindexOperator": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CReindexOperator",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CReindexOperator",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "h": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "default": "h"
          }
        },
        "k": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "default": "k"
          }
        },
        "l": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "default": "l"
          }
        }
      },
      "CONTENTS_ORDER": [
        "h",
        "k",
        "l"
      ],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "Operator has bad syntax (needs three comma-separated fields)"
        },
        "202": {
          "description": "Operator contains invalid characters"
        },
        "203": {
          "description": "Operator is not set"
        }
      }
    },
    "CResolutionRange": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CResolutionRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CResolutionRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "low": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0,
            "allowUndefined": true
          }
        },
        "high": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0,
            "allowUndefined": true
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "201": {
          "description": "High/low resolution wrong way round?"
        }
      }
    },
    "CRunBatchRange": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CRunBatchRange",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CRunBatchRange",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "runNumber": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 1
          }
        },
        "batchRange0": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 1
          }
        },
        "batchRange1": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 1
          }
        },
        "resolution": {
          "class": "<class 'core.CCP4Data.CFloat'>",
          "qualifiers": {
            "min": 0.0,
            "allowUndefined": true
          }
        },
        "fileNumber": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 1
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "toolTip": "Specify range of reflections to treat as one run"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "End of batch range less than start"
        },
        "102": {
          "description": "All items must be set"
        }
      }
    },
    "CRunBatchRangeList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CRunBatchRangeList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CRunBatchRangeList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "listMinLength": 1
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CRunBatchRange'>"
      }
    },
    "CShelxFADataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CShelxFADataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CShelxFADataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-shelx-FA",
        "mimeTypeDescription": "Shelx FA",
        "fileExtensions": [
          "hkl"
        ],
        "fileContentClassName": null,
        "fileLabel": "shelx_FA",
        "guiLabel": "Shelx FA",
        "toolTip": "Data used by Shelx programs",
        "helpFile": "data_files#shelxfa"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CShelxLabel": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CShelxLabel",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A string",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CShelxLabel",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "onlyEnumerators": true,
        "default": "UNDEFINED",
        "enumerators": [
          "UNDEFINED",
          "HREM",
          "LREM",
          "PEAK",
          "INFL",
          "NAT",
          "DERI"
        ],
        "menuText": [
          "undefined",
          "high remote",
          "low remote",
          "peak",
          "inflection",
          "native",
          "derivative"
        ],
        "toolTip": "Hint to Shelx for the use of the dataset"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "String too short"
        },
        "102": {
          "description": "String too long"
        },
        "103": {
          "description": "not one of limited allowed values"
        },
        "104": {
          "description": "Contains disallowed characters"
        }
      }
    },
    "CSpaceGroup": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CSpaceGroup",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A string holding the space group",
      "base_classes": [
        "CString"
      ],
      "immediate_parent": "CString",
      "mro": [
        "CSpaceGroup",
        "CString",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "toolTip": "Hermann-Mauguin space group name",
        "helpFile": "crystal_data#space_group"
      },
      "QUALIFIERS_ORDER": [
        "minLength",
        "maxLength",
        "onlyEnumerators",
        "enumerators",
        "menuText",
        "allowedCharsCode"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'str'>"
        },
        "maxLength": {
          "type": "<class 'int'>",
          "description": "Maximum length of string"
        },
        "minLength": {
          "type": "<class 'int'>",
          "description": "Minimum length of string"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A list of allowed or recommended values for string"
        },
        "menuText": {
          "type": "<class 'list'>",
          "description": "A list of strings equivalent to the enumerators that will appear in the GUI"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        },
        "allowedCharsCode": {
          "type": "<class 'int'>",
          "description": "Flag if the text is limited to set of allowed characters"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Invalid space group"
        },
        "102": {
          "description": "Space group is not chiral",
          "severity": 2
        },
        "103": {
          "description": "Space group is not Hermann-Mauguin standard"
        },
        "104": {
          "description": "Space group is not a chiral Hermann-Mauguin standard. Full syminfo.lib information not loaded."
        },
        "105": {
          "description": "Space group is not Hermann-Mauguin standard - has wrong number of spaces?"
        },
        "106": {
          "description": "Space group is undefined",
          "severity": 1
        },
        "107": {
          "description": "Space group is undefined"
        },
        "108": {
          "description": "Space group is incomplete",
          "severity": 2
        }
      }
    },
    "CSpaceGroupCell": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CSpaceGroupCell",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Cell space group and parameters",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CSpaceGroupCell",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "spaceGroup": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CSpaceGroup'>",
          "qualifiers": {
            "guilabel": "space group"
          }
        },
        "cell": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>",
          "qualifiers": {
            "guilabel": "cell"
          }
        }
      },
      "CONTENTS_ORDER": [
        "spaceGroup",
        "cell"
      ],
      "QUALIFIERS": {
        "toolTip": "Space group and cell length and angles",
        "helpFile": "crystal_data#cell_space_group"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "Cell lengths should NOT be identical"
        },
        "102": {
          "description": "Cell angles should NOT be identical"
        },
        "103": {
          "description": "Cell angle should be 90"
        },
        "104": {
          "description": "Cell angle should NOT be 90"
        },
        "105": {
          "description": "Cell lengths should be identical"
        },
        "106": {
          "description": "Cell angle should be 120"
        },
        "107": {
          "description": "Cell angle should be identical"
        }
      }
    },
    "CUnmergedDataContent": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CUnmergedDataContent",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Base class for classes holding file contents",
      "base_classes": [
        "CDataFileContent"
      ],
      "immediate_parent": "CDataFileContent",
      "mro": [
        "CUnmergedDataContent",
        "CDataFileContent",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "format": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "unk",
              "mtz",
              "xds",
              "sca",
              "saint",
              "shelx",
              "mmcif"
            ],
            "default": "unk"
          }
        },
        "merged": {
          "class": "<class 'core.CCP4Data.CString'>",
          "qualifiers": {
            "onlyEnumerators": true,
            "enumerators": [
              "unk",
              "merged",
              "unmerged"
            ],
            "default": "unk"
          }
        },
        "crystalName": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCrystalName'>"
        },
        "datasetName": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CDatasetName'>"
        },
        "cell": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CCell'>"
        },
        "spaceGroup": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CSpaceGroup'>"
        },
        "batchs": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "lowRes": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "highRes": {
          "class": "<class 'core.CCP4Data.CFloat'>"
        },
        "knowncell": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "knownwavelength": {
          "class": "<class 'core.CCP4Data.CBoolean'>"
        },
        "numberLattices": {
          "class": "<class 'core.CCP4Data.CInt'>"
        },
        "wavelength": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CWavelength'>"
        },
        "numberofdatasets": {
          "class": "<class 'core.CCP4Data.CInt'>"
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "allowUndefined": true,
        "default": "NotImplemented",
        "toolTip": "NotImplemented",
        "guiLabel": "NotImplemented",
        "guiDefinition": {},
        "helpFile": "NotImplemented",
        "saveToDb": false
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CUnmergedDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CUnmergedDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Handle MTZ, XDS and scalepack files. Allow wildcard filename",
      "base_classes": [
        "CDataFile"
      ],
      "immediate_parent": "CDataFile",
      "mro": [
        "CUnmergedDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-unmerged-experimental",
        "mimeTypeDescription": "Unmerged experimental data",
        "fileExtensions": [
          "mtz",
          "hkl",
          "HKL",
          "sca",
          "SCA",
          "ent",
          "cif"
        ],
        "fileContentClassName": "CUnmergedDataContent",
        "guiLabel": "Unmerged reflections",
        "toolTip": "Unmerged experimental data in any format",
        "helpFile": "data_files#unmerged_data"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>",
          "description": "Flag if data file can be undefined at run time"
        },
        "mustExist": {
          "type": "<class 'bool'>",
          "description": "Flag if data file must exist at run time"
        },
        "fromPreviousJob": {
          "type": "<class 'bool'>",
          "description": "Flag if input data file can be inferred from preceeding jobs"
        },
        "jobCombo": {
          "type": "<class 'bool'>",
          "description": "Flag if data widget should be a combo box "
        },
        "mimeTypeName": {
          "type": "<class 'str'>",
          "description": ""
        },
        "mimeTypeDescription": {
          "type": "<class 'str'>",
          "description": ""
        },
        "fileLabel": {
          "type": "<class 'str'>",
          "description": "Label for file"
        },
        "fileExtensions": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A list of strings containing allowed file extensions (no dot)"
        },
        "fileContentClassName": {
          "type": "<class 'str'>",
          "editable": false,
          "description": "A string containing the name of a class which will hold the file contents"
        },
        "isDirectory": {
          "type": "<class 'bool'>",
          "description": "Flag if the data is a directory"
        },
        "ifInfo": {
          "type": "<class 'bool'>",
          "description": "Flag if gui widget should have info icon"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save the name of this file in the database"
        },
        "requiredSubType": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed sub types"
        },
        "requiredContentFlag": {
          "type": "<class 'list'>",
          "listItemType": "<class 'int'>",
          "description": "A list of allowed content flags"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "File does not exist"
        },
        "102": {
          "description": "No mime type for data file"
        },
        "103": {
          "description": "Attempting to set file content with inappropriate data"
        },
        "104": {
          "description": "There is no file content class specified for this type of file"
        },
        "105": {
          "description": "The file content class specified for this type of file can not be found"
        },
        "300": {
          "description": "Passed",
          "severity": 0
        },
        "305": {
          "description": "Neither original nor test file exists",
          "severity": 0
        },
        "306": {
          "description": "Original file does not exists"
        },
        "307": {
          "description": "Test file does not exist "
        },
        "308": {
          "description": "Files failed checksum comparison"
        },
        "309": {
          "description": "Files failed size comparison"
        },
        "310": {
          "description": "No comparison testing implemented for this file type",
          "severity": 2
        },
        "311": {
          "description": "Failed loading original file for comparison"
        },
        "312": {
          "description": "Failed loading test file for comparison"
        },
        "313": {
          "description": "Files failed simple text diff comparison"
        },
        "320": {
          "description": "Unrecognised error attempting to load file"
        }
      }
    },
    "CUnmergedDataFileList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CUnmergedDataFileList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CUnmergedDataFileList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CUnmergedDataFile'>"
      }
    },
    "CUnmergedMtzDataFile": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CUnmergedMtzDataFile",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "An MTZ experimental data file",
      "base_classes": [
        "CMtzDataFile"
      ],
      "immediate_parent": "CMtzDataFile",
      "mro": [
        "CUnmergedMtzDataFile",
        "CMtzDataFile",
        "CDataFile",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "project": {
          "class": "<class 'core.CCP4File.CProjectId'>"
        },
        "baseName": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "relPath": {
          "class": "<class 'core.CCP4File.CFilePath'>"
        },
        "annotation": {
          "class": "<class 'core.CCP4Data.CString'>"
        },
        "dbFileId": {
          "class": "<class 'core.CCP4Data.CUUID'>"
        },
        "subType": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "default": null
          }
        },
        "contentFlag": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "min": 0,
            "default": null
          }
        }
      },
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "mimeTypeName": "application/CCP4-mtz-unmerged",
        "mimeTypeDescription": "MTZ unmerged experimental data",
        "fileExtensions": [
          "mtz"
        ],
        "fileContentClassName": null,
        "guiLabel": "Unmerged MTZ reflections",
        "toolTip": "Unmerged experimental data in CCP4's MTZ format"
      },
      "QUALIFIERS_ORDER": [
        "fileExtensions",
        "mimeTypeName",
        "mimeTypeDescription",
        "fileLabel",
        "allowUndefined",
        "mustExist",
        "fromPreviousJob",
        "jobCombo",
        "fileContentClassName",
        "isDirectory",
        "saveToDb",
        "requiredSubType",
        "requiredContentFlag"
      ],
      "QUALIFIERS_DEFINITION": {
        "sameCrystalAs": {
          "type": "<class 'str'>",
          "description": "Name of CMtzDataFile object that crystal parameters should match - probably the observed data"
        },
        "sameCrystalLevel": {
          "type": "<class 'int'>",
          "description": "Rigour of same crystal test"
        }
      },
      "ERROR_CODES": {
        "151": {
          "description": "Failed converting MTZ file to alternative format"
        },
        "152": {
          "description": "Failed merging MTZ file - invalid input"
        },
        "153": {
          "description": "Failed merging MTZ files - error running cmtzjoin - see log"
        },
        "154": {
          "description": "Failed merging MTZ files - error running cad - see log"
        },
        "401": {
          "description": "MTZ file header data differs"
        },
        "402": {
          "description": "MTZ file columns differ"
        },
        "403": {
          "description": "Error trying to access number of reflections",
          "severity": 2
        },
        "404": {
          "description": "MTZ files have different number of reflections"
        },
        "405": {
          "description": "MTZ column mean value differs"
        },
        "406": {
          "description": "MTZ file header data differs - may be autogenerated names",
          "severity": 2
        },
        "407": {
          "description": "Error splitting MTZ file - failed creating input command to cmtzsplit"
        },
        "408": {
          "description": "Error splitting MTZ file - output file missing"
        }
      }
    },
    "CWavelength": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CWavelength",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "Wavelength in Angstrom",
      "base_classes": [
        "CFloat"
      ],
      "immediate_parent": "CFloat",
      "mro": [
        "CWavelength",
        "CFloat",
        "CBaseData",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "min": 0.0,
        "toolTip": "Data collection wavelength in Angstrom"
      },
      "QUALIFIERS_ORDER": [
        "min",
        "max",
        "onlyEnumerators",
        "enumerators",
        "menuText"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'float'>"
        },
        "max": {
          "description": "The inclusive maximum value"
        },
        "min": {
          "description": "The inclusive minimum value"
        },
        "enumerators": {
          "type": "<class 'list'>",
          "description": "A Python list of allowed or recommended values - see onlyEnumerators"
        },
        "menuText": {
          "type": "<class 'list'>",
          "listItemType": "<class 'str'>",
          "description": "A Python list of strings, matching items in enumerators list, to appear on GUI menu"
        },
        "onlyEnumerators": {
          "type": "<class 'bool'>",
          "description": "If this is true then the enumerators are obligatory - otherwise they are treated as recommended values"
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "below minimum"
        },
        "102": {
          "description": "above maximum"
        },
        "103": {
          "description": "not one of limited allowed values"
        }
      }
    },
    "CXia2ImageSelection": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CXia2ImageSelection",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "QObject(self, parent: typing.Optional[PySide2.QtCore.QObject] = None) -> None",
      "base_classes": [
        "CData"
      ],
      "immediate_parent": "CData",
      "mro": [
        "CXia2ImageSelection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {
        "imageFile": {
          "class": "<class 'ccp4x.data_scan.CCP4XtalData.CImageFile'>"
        },
        "imageStart": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 0
          }
        },
        "imageEnd": {
          "class": "<class 'core.CCP4Data.CInt'>",
          "qualifiers": {
            "allowUndefined": true,
            "min": 0
          }
        }
      },
      "CONTENTS_ORDER": [
        "imageFile",
        "imageStart",
        "imageEnd"
      ],
      "QUALIFIERS": {
        "toolTip": "select an image file and an optional range of files to define a dataset"
      },
      "QUALIFIERS_ORDER": [
        "allowUndefined",
        "default",
        "toolTip",
        "guiLabel",
        "guiDefinition",
        "helpFile",
        "saveToDb"
      ],
      "QUALIFIERS_DEFINITION": {
        "allowUndefined": {
          "type": "<class 'bool'>"
        },
        "default": {
          "type": "<class 'dict'>"
        },
        "toolTip": {
          "type": "<class 'str'>"
        },
        "guiLabel": {
          "type": "<class 'str'>"
        },
        "guiDefinition": {
          "type": "<class 'dict'>"
        },
        "helpFile": {
          "type": "<class 'str'>"
        },
        "saveToDb": {
          "type": "<class 'bool'>",
          "description": "Save this data in the database"
        }
      },
      "ERROR_CODES": {
        "0": {
          "severity": 0,
          "description": "OK"
        },
        "1": {
          "severity": 1,
          "description": "Data has undefined value"
        },
        "2": {
          "severity": 3,
          "description": "Data has undefined value"
        },
        "3": {
          "severity": 2,
          "description": "Missing data"
        },
        "4": {
          "description": "Missing data"
        },
        "5": {
          "description": "Attempting to set data of wrong type"
        },
        "6": {
          "description": "Default value does not satisfy validity check"
        },
        "7": {
          "severity": 2,
          "description": "Unrecognised qualifier in data input"
        },
        "8": {
          "severity": 2,
          "description": "Attempting to get inaccessible attribute:"
        },
        "9": {
          "description": "Failed to get property"
        },
        "10": {
          "severity": 2,
          "description": "Attempting to set inaccessible attribute:"
        },
        "11": {
          "description": "Failed to set property:"
        },
        "12": {
          "description": "Undetermined error setting value from XML"
        },
        "13": {
          "description": "Unrecognised class name in qualifier"
        },
        "14": {
          "severity": 2,
          "description": "No object name when saving qualifiers to XML"
        },
        "15": {
          "description": "Error saving qualifier to XML"
        },
        "16": {
          "severity": 2,
          "description": "Unrecognised item in XML data file"
        },
        "17": {
          "description": "Attempting to set unrecognised qualifier"
        },
        "18": {
          "description": "Attempting to set qualifier with wrong type"
        },
        "19": {
          "description": "Attempting to set qualifier with wrong list item type"
        },
        "20": {
          "description": "Error creating a list/dict item object"
        },
        "21": {
          "description": "Unknown error setting qualifiers from Xml file"
        },
        "22": {
          "description": "Unknown error testing validity"
        },
        "23": {
          "description": "Error saving data object to XML"
        },
        "24": {
          "description": "Unable to test validity of default",
          "severity": 2
        },
        "300": {
          "description": "Compared objects are the same",
          "severity": 0
        },
        "315": {
          "description": "Both compared objects are null",
          "severity": 0
        },
        "301": {
          "description": "Unable to compare this class of data",
          "severity": 2
        },
        "302": {
          "description": "Other data has null value"
        },
        "303": {
          "description": "My data has null value"
        },
        "304": {
          "description": "Data has different values"
        }
      }
    },
    "CXia2ImageSelectionList": {
      "module": "ccp4x.data_scan.CCP4XtalData",
      "class": "CXia2ImageSelectionList",
      "file_path": "/Applications/ccp4-9/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/ccp4i2/core/CCP4XtalData.py",
      "docstring": "A list with all items of one CData sub-class",
      "base_classes": [
        "CList"
      ],
      "immediate_parent": "CList",
      "mro": [
        "CXia2ImageSelectionList",
        "CList",
        "CCollection",
        "CData",
        "CObject",
        "QObject",
        "Object",
        "CDataQualifiers"
      ],
      "CONTENTS": {},
      "CONTENTS_ORDER": [],
      "QUALIFIERS": {
        "default": "NotImplemented",
        "listMinLength": 0,
        "listMaxLength": "NotImplemented",
        "listCompare": "NotImplemented"
      },
      "QUALIFIERS_ORDER": [
        "listMinLength",
        "listMaxLength",
        "listCompare"
      ],
      "QUALIFIERS_DEFINITION": {
        "default": {
          "type": "<class 'list'>"
        },
        "listMaxLength": {
          "type": "<class 'int'>",
          "description": "Inclusive maximum length of list"
        },
        "listMinLength": {
          "type": "<class 'int'>",
          "description": "Inclusive minimum length of list"
        },
        "listCompare": {
          "type": "<class 'int'>",
          "description": "If has value 1/-1 consecutive items in list must be greater/less than preceeding item. The list item class must have a __cmp__() method."
        }
      },
      "ERROR_CODES": {
        "101": {
          "description": "List shorter than required minimum length"
        },
        "102": {
          "description": "List longer than required maximum length"
        },
        "103": {
          "description": "Consecutive values in list fail comparison test"
        },
        "104": {
          "description": "Attempting to add object of wrong type"
        },
        "105": {
          "description": "Attempting to add object of correct type but wrong qualifiers"
        },
        "106": {
          "description": "Attempting to add data which does not satisfy the qualifiers for a list item"
        },
        "107": {
          "description": "Deleting item will reduce list below minimum length"
        },
        "108": {
          "description": "Adding item will extend list beyond maximum length"
        },
        "109": {
          "description": "Invalid item class"
        },
        "110": {
          "description": "etree (XML) list item of wrong type"
        },
        "112": {
          "description": "No list item object set for list"
        }
      },
      "SUBITEM": {
        "class": "<class 'ccp4x.data_scan.CCP4XtalData.CXia2ImageSelection'>"
      }
    }
  }
}